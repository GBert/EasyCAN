/* ----------------------------------------------------------------------------
 * "THE BEER-WARE LICENSE" (Revision 42):
 * <info@gerhard-bertelsmann.de> wrote this file. As long as you retain this
 * notice you can do whatever you want with this stuff. If we meet some day,
 * and you think this stuff is worth it, you can buy me a beer in return
 * Gerhard Bertelsmann
 * ----------------------------------------------------------------------------
 */

/********************************************************************
 ispired by file: mcp2515.h

 Description:
 This file contains the MCP2515 interface definitions.

 Authors and Copyright:
 (c) 2012, Thomas Fischl <tfischl@gmx.de>

 License:
 This file is open source. You can use it or parts of it in own
 open source projects. For closed or commercial projects you have to
 contact the authors listed above to get the permission for using
 this source code.

 ********************************************************************/


/* PICs CAN IP is very similar to the MCP2515 CAN controller
   CAN bit timing generated by 'can-calc-bit-timing -c 16000000 mcp2515 '

   Bit timing parameters for mcp251x with 16.000000 MHz ref clock
   nominal                                 real Bitrt   nom  real SampP
   Bitrate TQ[ns] PrS PhS1 PhS2 SJW BRP Bitrate Error SampP SampP Error CNF1 CNF2 CNF3
   1000000     62   5    6    4   1   1 1000000  0.0% 75.0% 75.0%  0.0% 0x00 0xac 0x03
    800000     62   7    8    4   1   1  800000  0.0% 80.0% 80.0%  0.0% 0x00 0xbe 0x03
    500000    125   6    7    2   1   2  500000  0.0% 87.5% 87.5%  0.0% 0x01 0xb5 0x01
    250000    250   6    7    2   1   4  250000  0.0% 87.5% 87.5%  0.0% 0x03 0xb5 0x01
    125000    500   6    7    2   1   8  125000  0.0% 87.5% 87.5%  0.0% 0x07 0xb5 0x01
    100000    625   6    7    2   1  10  100000  0.0% 87.5% 87.5%  0.0% 0x09 0xb5 0x01
     50000   1250   6    7    2   1  20   50000  0.0% 87.5% 87.5%  0.0% 0x13 0xb5 0x01
     20000   3125   6    7    2   1  50   20000  0.0% 87.5% 87.5%  0.0% 0x31 0xb5 0x01
     10000   4000   8    8    8   1  64   10000  0.0% 87.5% 68.0% 22.3% 0x3f 0xbf 0x07
 */

// can message data structure
typedef struct canmsg_t
{
    unsigned long id;                   // identifier (11 or 29 bit)
    struct {
       unsigned char rtr : 1;           // remote transmit request
       unsigned char extended : 1;      // extended identifier
    } flags;

    unsigned char length;               // data length
    unsigned char data[8];              // payload data
};

