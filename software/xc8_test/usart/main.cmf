%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$startup.obj
end_init CODE 0 0 0 4 1
config CONFIG 0 300000 300000 4 1
$main.obj
text2 CODE 0 FFA6 FFA6 5A 1
text1 CODE 0 FF68 FF68 14 1
cstackCOMRAM COMRAM 1 1 1 8 1
bssCOMRAM COMRAM 1 9 9 1 1
cinit CODE 0 FF60 FF60 8 1
text0 CODE 0 FF7C FF7C 2A 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
BANK0 000060-0000FF 1
BANK1 000100-0001FF 1
BANK10 000A00-000AFF 1
BANK11 000B00-000BFF 1
BANK12 000C00-000CFF 1
BANK13 000D00-000DFF 1
BANK14 000E00-000E40 1
BANK2 000200-0002FF 1
BANK3 000300-0003FF 1
BANK4 000400-0004FF 1
BANK5 000500-0005FF 1
BANK6 000600-0006FF 1
BANK7 000700-0007FF 1
BANK8 000800-0008FF 1
BANK9 000900-0009FF 1
BIGRAM 00000A-000E40 1
CODE 000004-00FF5F 1
COMRAM 00000A-00005F 1
CONFIG 300004-30000D 1
CONST 000004-00FF5F 1
EEDATA F00000-F003FF 1
IDLOC 200000-200007 1
MEDIUMCONST 000F00-00FF5F 1
RAM 000060-000E40 1
SFR 000E41-000FFF 1
SMALLCONST 000F00-00FF5F 1
STACK 000060-0009FF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <file name>:<line number> <address> <psect name> <class name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$main.obj
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1101 FF60 cinit CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1103 FF60 cinit CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1106 FF60 cinit CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1117 FF60 cinit CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1123 FF62 cinit CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1124 FF62 cinit CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.as":1125 FF64 cinit CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":14 FF68 text1 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":16 FF6C text1 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":18 FF70 text1 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":19 FF72 text1 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":20 FF74 text1 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":23 FF76 text1 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c":24 FF7A text1 CODE
"/opt/microchip/xc8/v1.30/include/pic18f26k80.h":35392 FF7C text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":7 FF7C text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":11 FF7C text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":12 FF84 text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":14 FF86 text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":16 FF94 text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":17 FF9A text0 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":18 FFA4 text0 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":124 FFA6 text2 CODE
"/home/gerd/projekte/pic/xc8_test/usart/main.c":19 FFA6 text0 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":126 FFAA text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":127 FFAE text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":129 FFB2 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":130 FFB4 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":132 FFB6 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":134 FFBA text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":135 FFBC text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":138 FFBE text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":139 FFC0 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":141 FFC2 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":142 FFC6 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":143 FFCA text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":144 FFCA text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":146 FFCC text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":147 FFCE text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":149 FFD0 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":150 FFD2 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":154 FFD4 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":155 FFD8 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":156 FFDC text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":157 FFDC text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":159 FFDE text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":160 FFE2 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":161 FFE6 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":162 FFE6 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":164 FFE8 text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":165 FFEC text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":167 FFFA text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":168 FFFC text2 CODE
"/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c":169 FFFE text2 CODE
$startup.obj
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":58 0 text CODE
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":59 0 text CODE
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":60 0 text CODE
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":62 0 text CODE
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":98 0 reset_vec CODE
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":106 0 init CODE
"/home/gerd/projekte/pic/xc8_test/usart/startup.as":122 0 end_init CODE
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__S0 300004 0 ABS 0 - main.obj
__S1 A 0 ABS 0 - main.obj
__S2 0 0 ABS 0 - main.obj
__Hintentry 0 0 ABS 0 intentry main.obj
__Lintentry 0 0 ABS 0 intentry main.obj
_USART1_Status 9 0 COMRAM 1 bssCOMRAM main.obj
_PIE1 F9D 0 ABS 0 - main.obj
_main FF7C 0 CODE 0 text0 main.obj
___sp 0 0 STACK 2 stack startup.obj
start 0 0 CODE 0 init startup.obj
_PORTB F81 0 ABS 0 - main.obj
__Hirdata 0 0 CODE 0 irdata main.obj
__Lirdata 0 0 CODE 0 irdata main.obj
__HRAM 0 0 ABS 0 - main.obj
__LRAM 1 0 ABS 0 - main.obj
__Hconfig 300004 0 CONFIG 0 config main.obj
__Lconfig 300000 0 CONFIG 0 config main.obj
__Hbigram 0 0 ABS 0 bigram main.obj
__Lbigram 0 0 ABS 0 bigram main.obj
__Hrparam 0 0 ABS 0 rparam main.obj
__Lrparam 0 0 ABS 0 rparam main.obj
__Hram 0 0 ABS 0 ram main.obj
__Lram 0 0 ABS 0 ram main.obj
main@item 7 0 COMRAM 1 cstackCOMRAM main.obj
__Hcomram 0 0 ABS 0 comram main.obj
__Lcomram 0 0 ABS 0 comram main.obj
__Hsfr 0 0 ABS 0 sfr main.obj
__Lsfr 0 0 ABS 0 sfr main.obj
__Hbss 0 0 RAM 1 bss main.obj
__Lbss 0 0 RAM 1 bss main.obj
__Hnvrram 0 0 COMRAM 1 nvrram main.obj
__Lnvrram 0 0 COMRAM 1 nvrram main.obj
Write1USART@data 1 0 COMRAM 1 cstackCOMRAM main.obj
_RCSTA1 FAB 0 ABS 0 - main.obj
Open1USART@config 6 0 COMRAM 1 cstackCOMRAM main.obj
_TXREG1 FAD 0 ABS 0 - main.obj
_SPBRG1 FAF 0 ABS 0 - main.obj
_TXSTA1 FAC 0 ABS 0 - main.obj
_PIE1bits F9D 0 ABS 0 - main.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__CFG_FOSC$HS2 0 0 ABS 0 - main.obj
__Hbigbss 0 0 BIGRAM 1 bigbss main.obj
__Lbigbss 0 0 BIGRAM 1 bigbss main.obj
__Hintret 0 0 ABS 0 intret main.obj
__Lintret 0 0 ABS 0 intret main.obj
__Hramtop F00 0 RAM 0 ramtop main.obj
__Lramtop F00 0 RAM 0 ramtop main.obj
__Hstruct 0 0 COMRAM 1 struct main.obj
__Lstruct 0 0 COMRAM 1 struct main.obj
__Hbigdata 0 0 BIGRAM 1 bigdata main.obj
__Lbigdata 0 0 BIGRAM 1 bigdata main.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hfarbss 0 0 FARRAM 0 farbss main.obj
__Lfarbss 0 0 FARRAM 0 farbss main.obj
__Hintcode 0 0 CODE 0 intcode main.obj
__Lintcode 0 0 CODE 0 intcode main.obj
__Hfardata 0 0 FARRAM 0 fardata main.obj
__Lfardata 0 0 FARRAM 0 fardata main.obj
__Habs1 0 0 ABS 0 abs1 main.obj
__Labs1 0 0 ABS 0 abs1 main.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
__Hdata 0 0 ABS 0 data main.obj
__Ldata 0 0 ABS 0 data main.obj
stackhi 9FF 0 ABS 0 - startup.obj
__Htemp 0 0 COMRAM 1 temp main.obj
__Ltemp 0 0 COMRAM 1 temp main.obj
stacklo 60 0 ABS 0 - startup.obj
__Hrbit 0 0 COMRAM 1 rbit main.obj
__Lrbit 0 0 COMRAM 1 rbit main.obj
__Hinit 0 0 CODE 0 init main.obj
__Linit 0 0 CODE 0 init main.obj
__Hintcodelo 0 0 CODE 0 intcodelo main.obj
__Lintcodelo 0 0 CODE 0 intcodelo main.obj
__Hrbss 0 0 COMRAM 1 rbss main.obj
__end_of_main FFA6 0 CODE 0 text0 main.obj
__Lrbss 0 0 COMRAM 1 rbss main.obj
__Htext 0 0 ABS 0 text main.obj
__Ltext 0 0 ABS 0 text main.obj
end_of_initialization FF62 0 CODE 0 cinit main.obj
_SPBRGH1 F7D 0 ABS 0 - main.obj
__Hibigdata 0 0 CODE 0 ibigdata main.obj
__Libigdata 0 0 CODE 0 ibigdata main.obj
__size_of_Write1USART 0 0 ABS 0 - main.obj
__Hifardata 0 0 CODE 0 ifardata main.obj
__Lifardata 0 0 CODE 0 ifardata main.obj
__Hbank0 0 0 ABS 0 bank0 main.obj
__Lbank0 0 0 ABS 0 bank0 main.obj
__Hbank1 0 0 ABS 0 bank1 main.obj
__Lbank1 0 0 ABS 0 bank1 main.obj
__Hbank2 0 0 ABS 0 bank2 main.obj
__Lbank2 0 0 ABS 0 bank2 main.obj
__Hbank3 0 0 ABS 0 bank3 main.obj
__Lbank3 0 0 ABS 0 bank3 main.obj
__Hbank4 0 0 ABS 0 bank4 main.obj
__Lbank4 0 0 ABS 0 bank4 main.obj
__Hbank5 0 0 ABS 0 bank5 main.obj
__Lbank5 0 0 ABS 0 bank5 main.obj
__Hpowerup 0 0 CODE 0 powerup main.obj
__Lpowerup 0 0 CODE 0 powerup main.obj
__Hbank6 0 0 ABS 0 bank6 main.obj
__Lbank6 0 0 ABS 0 bank6 main.obj
__Hbank7 0 0 ABS 0 bank7 main.obj
__Lbank7 0 0 ABS 0 bank7 main.obj
__Hbank8 0 0 ABS 0 bank8 main.obj
__Lbank8 0 0 ABS 0 bank8 main.obj
__Htext0 0 0 ABS 0 text0 main.obj
__Ltext0 0 0 ABS 0 text0 main.obj
__Hbank9 0 0 ABS 0 bank9 main.obj
__Lbank9 0 0 ABS 0 bank9 main.obj
__Htext1 0 0 ABS 0 text1 main.obj
__Ltext1 0 0 ABS 0 text1 main.obj
__ptext0 FF7C 0 CODE 0 text0 main.obj
__Htext2 0 0 ABS 0 text2 main.obj
__Ltext2 0 0 ABS 0 text2 main.obj
__ptext1 FF68 0 CODE 0 text1 main.obj
__ptext2 FFA6 0 CODE 0 text2 main.obj
__HbssCOMRAM 0 0 ABS 0 bssCOMRAM main.obj
__LbssCOMRAM 0 0 ABS 0 bssCOMRAM main.obj
__pbssCOMRAM 9 0 COMRAM 1 bssCOMRAM main.obj
__Hclrtext 0 0 ABS 0 clrtext main.obj
__Lclrtext 0 0 ABS 0 clrtext main.obj
_Open1USART FFA6 0 CODE 0 text2 main.obj
__end_of__initialization FF62 0 CODE 0 cinit main.obj
__Hidata 0 0 CODE 0 idata main.obj
__Lidata 0 0 CODE 0 idata main.obj
__Hrdata 0 0 COMRAM 1 rdata main.obj
__Lrdata 0 0 COMRAM 1 rdata main.obj
__Hidloc 0 0 IDLOC 0 idloc main.obj
__Lidloc 0 0 IDLOC 0 idloc main.obj
__Hstack 0 0 STACK 2 stack main.obj
__Lstack 0 0 STACK 2 stack main.obj
__Hparam 0 0 ABS 0 rparam main.obj
__Lparam 0 0 ABS 0 rparam main.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM main.obj
__Hsmallconst 0 0 SMALLCONST 0 smallconst main.obj
__Lsmallconst 0 0 SMALLCONST 0 smallconst main.obj
__Hnvbit 0 0 COMRAM 1 nvbit main.obj
__Lnvbit 0 0 COMRAM 1 nvbit main.obj
__Hcinit 0 0 ABS 0 cinit main.obj
__Lcinit 0 0 ABS 0 cinit main.obj
__pcinit FF60 0 CODE 0 cinit main.obj
__ramtop F00 0 RAM 0 ramtop startup.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__size_of_main 0 0 ABS 0 - main.obj
__Hconst 0 0 CODE 0 const main.obj
__Lconst 0 0 CODE 0 const main.obj
__size_of_Open1USART 0 0 ABS 0 - main.obj
Open1USART@spbrg 1 0 COMRAM 1 cstackCOMRAM main.obj
__Hbank10 0 0 ABS 0 bank10 main.obj
__Lbank10 0 0 ABS 0 bank10 main.obj
__end_of_Write1USART FF7C 0 CODE 0 text1 main.obj
__Hbank11 0 0 ABS 0 bank11 main.obj
__Lbank11 0 0 ABS 0 bank11 main.obj
__Hbank12 0 0 ABS 0 bank12 main.obj
__Lbank12 0 0 ABS 0 bank12 main.obj
__Hbank13 0 0 ABS 0 bank13 main.obj
__Lbank13 0 0 ABS 0 bank13 main.obj
__Hbank14 0 0 ABS 0 bank14 main.obj
__Lbank14 0 0 ABS 0 bank14 main.obj
_RCSTA1bits FAB 0 ABS 0 - main.obj
_TXSTA1bits FAC 0 ABS 0 - main.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
__CFG_WDTEN$OFF 0 0 ABS 0 - main.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__Hend_init 4 0 CODE 0 end_init main.obj
__Lend_init 0 0 CODE 0 end_init main.obj
__smallconst 0 0 SMALLCONST 0 smallconst startup.obj
__Hreset_vec 0 0 CODE 0 reset_vec main.obj
__Lreset_vec 0 0 CODE 0 reset_vec main.obj
__accesstop 60 0 ABS 0 - startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body main.obj
__Lintcode_body 0 0 ABS 0 intcode_body main.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
start_initialization FF60 0 CODE 0 cinit main.obj
__end_of_Open1USART 10000 0 CODE 0 text2 main.obj
__initialization FF60 0 CODE 0 cinit main.obj
_Write1USART FF68 0 CODE 0 text1 main.obj
__activetblptr 0 0 ABS 0 - main.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect in on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
reset_vec 0 0 0 4 1
config 0 300000 300000 4 1
cstackCOMRAM 1 1 1 9 1
text2 0 FFA6 FFA6 5A 1
text0 0 FF7C FF7C 2A 1
text1 0 FF68 FF68 14 1
cinit 0 FF60 FF60 8 1
