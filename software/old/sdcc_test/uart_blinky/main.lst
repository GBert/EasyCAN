gplink-1.4.0 #1135 (Jul  7 2015)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 11-17-2015  14:29:38
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jul  7 2015) (Linux)
                                           ; This file was generated Tue Nov 17 14:29:38 2015
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k80
                                           	radix	dec
                                           	CONFIG	XINST=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_timer_ticks
                                           	global	_tx_fifo
                                           	global	_rx_fifo
                                           	global	_init_port
                                           	global	_init_timer
                                           	global	_main
                                           	global	_isr
                                           	global	_s1
                                           	global	_s2
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_RXERRCNTbits
                                           	extern	_TXERRCNTbits
                                           	extern	_BRGCON1bits
                                           	extern	_BRGCON2bits
                                           	extern	_BRGCON3bits
                                           	extern	_RXFCON0bits
                                           	extern	_RXFCON1bits
                                           	extern	_RXF6SIDHbits
                                           	extern	_RXF6SIDLbits
                                           	extern	_RXF6EIDHbits
                                           	extern	_RXF6EIDLbits
                                           	extern	_RXF7SIDHbits
                                           	extern	_RXF7SIDLbits
                                           	extern	_RXF7EIDHbits
                                           	extern	_RXF7EIDLbits
                                           	extern	_RXF8SIDHbits
                                           	extern	_RXF8SIDLbits
                                           	extern	_RXF8EIDHbits
                                           	extern	_RXF8EIDLbits
                                           	extern	_RXF9SIDHbits
                                           	extern	_RXF9SIDLbits
                                           	extern	_RXF9EIDHbits
                                           	extern	_RXF9EIDLbits
                                           	extern	_RXF10SIDHbits
                                           	extern	_RXF10SIDLbits
                                           	extern	_RXF10EIDHbits
                                           	extern	_RXF10EIDLbits
                                           	extern	_RXF11SIDHbits
                                           	extern	_RXF11SIDLbits
                                           	extern	_RXF11EIDHbits
                                           	extern	_RXF11EIDLbits
                                           	extern	_RXF12SIDHbits
                                           	extern	_RXF12SIDLbits
                                           	extern	_RXF12EIDHbits
                                           	extern	_RXF12EIDLbits
                                           	extern	_RXF13SIDHbits
                                           	extern	_RXF13SIDLbits
                                           	extern	_RXF13EIDHbits
                                           	extern	_RXF13EIDLbits
                                           	extern	_RXF14SIDHbits
                                           	extern	_RXF14SIDLbits
                                           	extern	_RXF14EIDHbits
                                           	extern	_RXF14EIDLbits
                                           	extern	_RXF15SIDHbits
                                           	extern	_RXF15SIDLbits
                                           	extern	_RXF15EIDHbits
                                           	extern	_RXF15EIDLbits
                                           	extern	_SDFLCbits
                                           	extern	_RXFBCON0bits
                                           	extern	_RXFBCON1bits
                                           	extern	_RXFBCON2bits
                                           	extern	_RXFBCON3bits
                                           	extern	_RXFBCON4bits
                                           	extern	_RXFBCON5bits
                                           	extern	_RXFBCON6bits
                                           	extern	_RXFBCON7bits
                                           	extern	_MSEL0bits
                                           	extern	_MSEL1bits
                                           	extern	_MSEL2bits
                                           	extern	_MSEL3bits
                                           	extern	_BSEL0bits
                                           	extern	_BIE0bits
                                           	extern	_TXBIEbits
                                           	extern	_B0CONbits
                                           	extern	_B0SIDHbits
                                           	extern	_B0SIDLbits
                                           	extern	_B0EIDHbits
                                           	extern	_B0EIDLbits
                                           	extern	_B0DLCbits
                                           	extern	_B0D0bits
                                           	extern	_B0D1bits
                                           	extern	_B0D2bits
                                           	extern	_B0D3bits
                                           	extern	_B0D4bits
                                           	extern	_B0D5bits
                                           	extern	_B0D6bits
                                           	extern	_B0D7bits
                                           	extern	_CANSTAT_RO9bits
                                           	extern	_CANCON_RO9bits
                                           	extern	_B1CONbits
                                           	extern	_B1SIDHbits
                                           	extern	_B1SIDLbits
                                           	extern	_B1EIDHbits
                                           	extern	_B1EIDLbits
                                           	extern	_B1DLCbits
                                           	extern	_B1D0bits
                                           	extern	_B1D1bits
                                           	extern	_B1D2bits
                                           	extern	_B1D3bits
                                           	extern	_B1D4bits
                                           	extern	_B1D5bits
                                           	extern	_B1D6bits
                                           	extern	_B1D7bits
                                           	extern	_CANSTAT_RO8bits
                                           	extern	_CANCON_RO8bits
                                           	extern	_B2CONbits
                                           	extern	_B2SIDHbits
                                           	extern	_B2SIDLbits
                                           	extern	_B2EIDHbits
                                           	extern	_B2EIDLbits
                                           	extern	_B2DLCbits
                                           	extern	_B2D0bits
                                           	extern	_B2D1bits
                                           	extern	_B2D2bits
                                           	extern	_B2D3bits
                                           	extern	_B2D4bits
                                           	extern	_B2D5bits
                                           	extern	_B2D6bits
                                           	extern	_B2D7bits
                                           	extern	_CANSTAT_RO7bits
                                           	extern	_CANCON_RO7bits
                                           	extern	_B3CONbits
                                           	extern	_B3SIDHbits
                                           	extern	_B3SIDLbits
                                           	extern	_B3EIDHbits
                                           	extern	_B3EIDLbits
                                           	extern	_B3DLCbits
                                           	extern	_B3D0bits
                                           	extern	_B3D1bits
                                           	extern	_B3D2bits
                                           	extern	_B3D3bits
                                           	extern	_B3D4bits
                                           	extern	_B3D5bits
                                           	extern	_B3D6bits
                                           	extern	_B3D7bits
                                           	extern	_CANSTAT_RO6bits
                                           	extern	_CANCON_RO6bits
                                           	extern	_B4CONbits
                                           	extern	_B4SIDHbits
                                           	extern	_B4SIDLbits
                                           	extern	_B4EIDHbits
                                           	extern	_B4EIDLbits
                                           	extern	_B4DLCbits
                                           	extern	_B4D0bits
                                           	extern	_B4D1bits
                                           	extern	_B4D2bits
                                           	extern	_B4D3bits
                                           	extern	_B4D4bits
                                           	extern	_B4D5bits
                                           	extern	_B4D6bits
                                           	extern	_B4D7bits
                                           	extern	_CANSTAT_RO5bits
                                           	extern	_CANCON_RO5bits
                                           	extern	_B5CONbits
                                           	extern	_B5SIDHbits
                                           	extern	_B5SIDLbits
                                           	extern	_B5EIDHbits
                                           	extern	_B5EIDLbits
                                           	extern	_B5DLCbits
                                           	extern	_B5D0bits
                                           	extern	_B5D1bits
                                           	extern	_B5D2bits
                                           	extern	_B5D3bits
                                           	extern	_B5D4bits
                                           	extern	_B5D5bits
                                           	extern	_B5D6bits
                                           	extern	_B5D7bits
                                           	extern	_CANSTAT_RO4bits
                                           	extern	_CANCON_RO4bits
                                           	extern	_RXF0SIDHbits
                                           	extern	_RXF0SIDLbits
                                           	extern	_RXF0EIDHbits
                                           	extern	_RXF0EIDLbits
                                           	extern	_RXF1SIDHbits
                                           	extern	_RXF1SIDLbits
                                           	extern	_RXF1EIDHbits
                                           	extern	_RXF1EIDLbits
                                           	extern	_RXF2SIDHbits
                                           	extern	_RXF2SIDLbits
                                           	extern	_RXF2EIDHbits
                                           	extern	_RXF2EIDLbits
                                           	extern	_RXF3SIDHbits
                                           	extern	_RXF3SIDLbits
                                           	extern	_RXF3EIDHbits
                                           	extern	_RXF3EIDLbits
                                           	extern	_RXF4SIDHbits
                                           	extern	_RXF4SIDLbits
                                           	extern	_RXF4EIDHbits
                                           	extern	_RXF4EIDLbits
                                           	extern	_RXF5SIDHbits
                                           	extern	_RXF5SIDLbits
                                           	extern	_RXF5EIDHbits
                                           	extern	_RXF5EIDLbits
                                           	extern	_RXM0SIDHbits
                                           	extern	_RXM0SIDLbits
                                           	extern	_RXM0EIDHbits
                                           	extern	_RXM0EIDLbits
                                           	extern	_RXM1SIDHbits
                                           	extern	_RXM1SIDLbits
                                           	extern	_RXM1EIDHbits
                                           	extern	_RXM1EIDLbits
                                           	extern	_TXB2CONbits
                                           	extern	_TXB2SIDHbits
                                           	extern	_TXB2SIDLbits
                                           	extern	_TXB2EIDHbits
                                           	extern	_TXB2EIDLbits
                                           	extern	_TXB2DLCbits
                                           	extern	_TXB2D0bits
                                           	extern	_TXB2D1bits
                                           	extern	_TXB2D2bits
                                           	extern	_TXB2D3bits
                                           	extern	_TXB2D4bits
                                           	extern	_TXB2D5bits
                                           	extern	_TXB2D6bits
                                           	extern	_TXB2D7bits
                                           	extern	_CANSTAT_RO3bits
                                           	extern	_CANCON_RO3bits
                                           	extern	_TXB1CONbits
                                           	extern	_TXB1SIDHbits
                                           	extern	_TXB1SIDLbits
                                           	extern	_TXB1EIDHbits
                                           	extern	_TXB1EIDLbits
                                           	extern	_TXB1DLCbits
                                           	extern	_TXB1D0bits
                                           	extern	_TXB1D1bits
                                           	extern	_TXB1D2bits
                                           	extern	_TXB1D3bits
                                           	extern	_TXB1D4bits
                                           	extern	_TXB1D5bits
                                           	extern	_TXB1D6bits
                                           	extern	_TXB1D7bits
                                           	extern	_CANSTAT_RO2bits
                                           	extern	_CANCON_RO2bits
                                           	extern	_TXB0CONbits
                                           	extern	_TXB0SIDHbits
                                           	extern	_TXB0SIDLbits
                                           	extern	_TXB0EIDHbits
                                           	extern	_TXB0EIDLbits
                                           	extern	_TXB0DLCbits
                                           	extern	_TXB0D0bits
                                           	extern	_TXB0D1bits
                                           	extern	_TXB0D2bits
                                           	extern	_TXB0D3bits
                                           	extern	_TXB0D4bits
                                           	extern	_TXB0D5bits
                                           	extern	_TXB0D6bits
                                           	extern	_TXB0D7bits
                                           	extern	_CANSTAT_RO1bits
                                           	extern	_CANCON_RO1bits
                                           	extern	_RXB1CONbits
                                           	extern	_RXB1SIDHbits
                                           	extern	_RXB1SIDLbits
                                           	extern	_RXB1EIDHbits
                                           	extern	_RXB1EIDLbits
                                           	extern	_RXB1DLCbits
                                           	extern	_RXB1D0bits
                                           	extern	_RXB1D1bits
                                           	extern	_RXB1D2bits
                                           	extern	_RXB1D3bits
                                           	extern	_RXB1D4bits
                                           	extern	_RXB1D5bits
                                           	extern	_RXB1D6bits
                                           	extern	_RXB1D7bits
                                           	extern	_CANSTAT_RO0bits
                                           	extern	_CANCON_RO0bits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_ECCP2CONbits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCONHbits
                                           	extern	_PADCFG1bits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_IOCBbits
                                           	extern	_WPUBbits
                                           	extern	_ANCON1bits
                                           	extern	_ANCON0bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON1bits
                                           	extern	_RXB0CONbits
                                           	extern	_RXB0SIDHbits
                                           	extern	_RXB0SIDLbits
                                           	extern	_RXB0EIDHbits
                                           	extern	_RXB0EIDLbits
                                           	extern	_RXB0DLCbits
                                           	extern	_RXB0D0bits
                                           	extern	_RXB0D1bits
                                           	extern	_RXB0D2bits
                                           	extern	_RXB0D3bits
                                           	extern	_RXB0D4bits
                                           	extern	_RXB0D5bits
                                           	extern	_RXB0D6bits
                                           	extern	_RXB0D7bits
                                           	extern	_CANSTATbits
                                           	extern	_CANCONbits
                                           	extern	_CIOCONbits
                                           	extern	_COMSTATbits
                                           	extern	_ECANCONbits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_EECON1bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_T4CONbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_SLRCONbits
                                           	extern	_ODCONbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_CCPTMRSbits
                                           	extern	_REFOCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_RCSTA2bits
                                           	extern	_BAUDCON1bits
                                           	extern	_HLVDCONbits
                                           	extern	_T1GCONbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3GCONbits
                                           	extern	_T3CONbits
                                           	extern	_CMSTATbits
                                           	extern	_CMSTATUSbits
                                           	extern	_CVRCONbits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_BAUDCON2bits
                                           	extern	_TXSTA2bits
                                           	extern	_CCP1CONbits
                                           	extern	_ECCP1CONbits
                                           	extern	_ECCP1DELbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_SSPADDbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_INTCON1bits
                                           	extern	_STKPTRbits
                                           	extern	_RXERRCNT
                                           	extern	_TXERRCNT
                                           	extern	_BRGCON1
                                           	extern	_BRGCON2
                                           	extern	_BRGCON3
                                           	extern	_RXFCON0
                                           	extern	_RXFCON1
                                           	extern	_RXF6SIDH
                                           	extern	_RXF6SIDL
                                           	extern	_RXF6EIDH
                                           	extern	_RXF6EIDL
                                           	extern	_RXF7SIDH
                                           	extern	_RXF7SIDL
                                           	extern	_RXF7EIDH
                                           	extern	_RXF7EIDL
                                           	extern	_RXF8SIDH
                                           	extern	_RXF8SIDL
                                           	extern	_RXF8EIDH
                                           	extern	_RXF8EIDL
                                           	extern	_RXF9SIDH
                                           	extern	_RXF9SIDL
                                           	extern	_RXF9EIDH
                                           	extern	_RXF9EIDL
                                           	extern	_RXF10SIDH
                                           	extern	_RXF10SIDL
                                           	extern	_RXF10EIDH
                                           	extern	_RXF10EIDL
                                           	extern	_RXF11SIDH
                                           	extern	_RXF11SIDL
                                           	extern	_RXF11EIDH
                                           	extern	_RXF11EIDL
                                           	extern	_RXF12SIDH
                                           	extern	_RXF12SIDL
                                           	extern	_RXF12EIDH
                                           	extern	_RXF12EIDL
                                           	extern	_RXF13SIDH
                                           	extern	_RXF13SIDL
                                           	extern	_RXF13EIDH
                                           	extern	_RXF13EIDL
                                           	extern	_RXF14SIDH
                                           	extern	_RXF14SIDL
                                           	extern	_RXF14EIDH
                                           	extern	_RXF14EIDL
                                           	extern	_RXF15SIDH
                                           	extern	_RXF15SIDL
                                           	extern	_RXF15EIDH
                                           	extern	_RXF15EIDL
                                           	extern	_SDFLC
                                           	extern	_RXFBCON0
                                           	extern	_RXFBCON1
                                           	extern	_RXFBCON2
                                           	extern	_RXFBCON3
                                           	extern	_RXFBCON4
                                           	extern	_RXFBCON5
                                           	extern	_RXFBCON6
                                           	extern	_RXFBCON7
                                           	extern	_MSEL0
                                           	extern	_MSEL1
                                           	extern	_MSEL2
                                           	extern	_MSEL3
                                           	extern	_BSEL0
                                           	extern	_BIE0
                                           	extern	_TXBIE
                                           	extern	_B0CON
                                           	extern	_B0SIDH
                                           	extern	_B0SIDL
                                           	extern	_B0EIDH
                                           	extern	_B0EIDL
                                           	extern	_B0DLC
                                           	extern	_B0D0
                                           	extern	_B0D1
                                           	extern	_B0D2
                                           	extern	_B0D3
                                           	extern	_B0D4
                                           	extern	_B0D5
                                           	extern	_B0D6
                                           	extern	_B0D7
                                           	extern	_CANSTAT_RO9
                                           	extern	_CANCON_RO9
                                           	extern	_B1CON
                                           	extern	_B1SIDH
                                           	extern	_B1SIDL
                                           	extern	_B1EIDH
                                           	extern	_B1EIDL
                                           	extern	_B1DLC
                                           	extern	_B1D0
                                           	extern	_B1D1
                                           	extern	_B1D2
                                           	extern	_B1D3
                                           	extern	_B1D4
                                           	extern	_B1D5
                                           	extern	_B1D6
                                           	extern	_B1D7
                                           	extern	_CANSTAT_RO8
                                           	extern	_CANCON_RO8
                                           	extern	_B2CON
                                           	extern	_B2SIDH
                                           	extern	_B2SIDL
                                           	extern	_B2EIDH
                                           	extern	_B2EIDL
                                           	extern	_B2DLC
                                           	extern	_B2D0
                                           	extern	_B2D1
                                           	extern	_B2D2
                                           	extern	_B2D3
                                           	extern	_B2D4
                                           	extern	_B2D5
                                           	extern	_B2D6
                                           	extern	_B2D7
                                           	extern	_CANSTAT_RO7
                                           	extern	_CANCON_RO7
                                           	extern	_B3CON
                                           	extern	_B3SIDH
                                           	extern	_B3SIDL
                                           	extern	_B3EIDH
                                           	extern	_B3EIDL
                                           	extern	_B3DLC
                                           	extern	_B3D0
                                           	extern	_B3D1
                                           	extern	_B3D2
                                           	extern	_B3D3
                                           	extern	_B3D4
                                           	extern	_B3D5
                                           	extern	_B3D6
                                           	extern	_B3D7
                                           	extern	_CANSTAT_RO6
                                           	extern	_CANCON_RO6
                                           	extern	_B4CON
                                           	extern	_B4SIDH
                                           	extern	_B4SIDL
                                           	extern	_B4EIDH
                                           	extern	_B4EIDL
                                           	extern	_B4DLC
                                           	extern	_B4D0
                                           	extern	_B4D1
                                           	extern	_B4D2
                                           	extern	_B4D3
                                           	extern	_B4D4
                                           	extern	_B4D5
                                           	extern	_B4D6
                                           	extern	_B4D7
                                           	extern	_CANSTAT_RO5
                                           	extern	_CANCON_RO5
                                           	extern	_B5CON
                                           	extern	_B5SIDH
                                           	extern	_B5SIDL
                                           	extern	_B5EIDH
                                           	extern	_B5EIDL
                                           	extern	_B5DLC
                                           	extern	_B5D0
                                           	extern	_B5D1
                                           	extern	_B5D2
                                           	extern	_B5D3
                                           	extern	_B5D4
                                           	extern	_B5D5
                                           	extern	_B5D6
                                           	extern	_B5D7
                                           	extern	_CANSTAT_RO4
                                           	extern	_CANCON_RO4
                                           	extern	_RXF0SIDH
                                           	extern	_RXF0SIDL
                                           	extern	_RXF0EIDH
                                           	extern	_RXF0EIDL
                                           	extern	_RXF1SIDH
                                           	extern	_RXF1SIDL
                                           	extern	_RXF1EIDH
                                           	extern	_RXF1EIDL
                                           	extern	_RXF2SIDH
                                           	extern	_RXF2SIDL
                                           	extern	_RXF2EIDH
                                           	extern	_RXF2EIDL
                                           	extern	_RXF3SIDH
                                           	extern	_RXF3SIDL
                                           	extern	_RXF3EIDH
                                           	extern	_RXF3EIDL
                                           	extern	_RXF4SIDH
                                           	extern	_RXF4SIDL
                                           	extern	_RXF4EIDH
                                           	extern	_RXF4EIDL
                                           	extern	_RXF5SIDH
                                           	extern	_RXF5SIDL
                                           	extern	_RXF5EIDH
                                           	extern	_RXF5EIDL
                                           	extern	_RXM0SIDH
                                           	extern	_RXM0SIDL
                                           	extern	_RXM0EIDH
                                           	extern	_RXM0EIDL
                                           	extern	_RXM1SIDH
                                           	extern	_RXM1SIDL
                                           	extern	_RXM1EIDH
                                           	extern	_RXM1EIDL
                                           	extern	_TXB2CON
                                           	extern	_TXB2SIDH
                                           	extern	_TXB2SIDL
                                           	extern	_TXB2EIDH
                                           	extern	_TXB2EIDL
                                           	extern	_TXB2DLC
                                           	extern	_TXB2D0
                                           	extern	_TXB2D1
                                           	extern	_TXB2D2
                                           	extern	_TXB2D3
                                           	extern	_TXB2D4
                                           	extern	_TXB2D5
                                           	extern	_TXB2D6
                                           	extern	_TXB2D7
                                           	extern	_CANSTAT_RO3
                                           	extern	_CANCON_RO3
                                           	extern	_TXB1CON
                                           	extern	_TXB1SIDH
                                           	extern	_TXB1SIDL
                                           	extern	_TXB1EIDH
                                           	extern	_TXB1EIDL
                                           	extern	_TXB1DLC
                                           	extern	_TXB1D0
                                           	extern	_TXB1D1
                                           	extern	_TXB1D2
                                           	extern	_TXB1D3
                                           	extern	_TXB1D4
                                           	extern	_TXB1D5
                                           	extern	_TXB1D6
                                           	extern	_TXB1D7
                                           	extern	_CANSTAT_RO2
                                           	extern	_CANCON_RO2
                                           	extern	_TXB0CON
                                           	extern	_TXB0SIDH
                                           	extern	_TXB0SIDL
                                           	extern	_TXB0EIDH
                                           	extern	_TXB0EIDL
                                           	extern	_TXB0DLC
                                           	extern	_TXB0D0
                                           	extern	_TXB0D1
                                           	extern	_TXB0D2
                                           	extern	_TXB0D3
                                           	extern	_TXB0D4
                                           	extern	_TXB0D5
                                           	extern	_TXB0D6
                                           	extern	_TXB0D7
                                           	extern	_CANSTAT_RO1
                                           	extern	_CANCON_RO1
                                           	extern	_RXB1CON
                                           	extern	_RXB1SIDH
                                           	extern	_RXB1SIDL
                                           	extern	_RXB1EIDH
                                           	extern	_RXB1EIDL
                                           	extern	_RXB1DLC
                                           	extern	_RXB1D0
                                           	extern	_RXB1D1
                                           	extern	_RXB1D2
                                           	extern	_RXB1D3
                                           	extern	_RXB1D4
                                           	extern	_RXB1D5
                                           	extern	_RXB1D6
                                           	extern	_RXB1D7
                                           	extern	_CANSTAT_RO0
                                           	extern	_CANCON_RO0
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_CCP2CON
                                           	extern	_ECCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CTMUICON
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCONH
                                           	extern	_PADCFG1
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_IOCB
                                           	extern	_WPUB
                                           	extern	_ANCON1
                                           	extern	_ANCON0
                                           	extern	_CM2CON
                                           	extern	_CM2CON1
                                           	extern	_CM1CON
                                           	extern	_CM1CON1
                                           	extern	_RXB0CON
                                           	extern	_RXB0SIDH
                                           	extern	_RXB0SIDL
                                           	extern	_RXB0EIDH
                                           	extern	_RXB0EIDL
                                           	extern	_RXB0DLC
                                           	extern	_RXB0D0
                                           	extern	_RXB0D1
                                           	extern	_RXB0D2
                                           	extern	_RXB0D3
                                           	extern	_RXB0D4
                                           	extern	_RXB0D5
                                           	extern	_RXB0D6
                                           	extern	_RXB0D7
                                           	extern	_CANSTAT
                                           	extern	_CANCON
                                           	extern	_CIOCON
                                           	extern	_COMSTAT
                                           	extern	_ECANCON
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_TXREG2
                                           	extern	_RCREG2
                                           	extern	_SPBRG2
                                           	extern	_SPBRGH2
                                           	extern	_SPBRGH1
                                           	extern	_EECON2
                                           	extern	_EECON1
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_TMR4
                                           	extern	_T4CON
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_SLRCON
                                           	extern	_ODCON
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_CCPTMRS
                                           	extern	_REFOCON
                                           	extern	_OSCTUNE
                                           	extern	_PSTR1CON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_RCSTA2
                                           	extern	_BAUDCON1
                                           	extern	_HLVDCON
                                           	extern	_PR4
                                           	extern	_T1GCON
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_T3GCON
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMSTAT
                                           	extern	_CMSTATUS
                                           	extern	_CVRCON
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_BAUDCON2
                                           	extern	_TXSTA2
                                           	extern	_CCP1CON
                                           	extern	_ECCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ECCP1DEL
                                           	extern	_PWM1CON
                                           	extern	_ECCP1AS
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_INTCON1
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_init_usart
                                           	extern	_puts_rom
                                           	extern	_puts_rom_fifo
                                           	extern	_putchar_fifo
                                           	extern	_fifo_getchar
                                           	extern	_fifo_putchar
                                           	extern	_copy_char_fifo
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _timer_ticks	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           
                                           udata_main_0	udata
                                           _tx_fifo	res	66
                                           
                                           udata_main_1	udata
                                           _rx_fifo	res	66
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_main_ivec_0x1_isr	code	0X000008
                                           ivec_0x1_isr:
000008   ef0b     goto    0x000a16         	GOTO	_isr
00000a   f005
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ;	.line	48; main.c	unsigned char do_print=0;
00055e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	53; main.c	init_port();
000560   ec88     call    0x000d10, 0x0call    0x000d10, 0x0 	CALL	_init_port
000562   f006
                                           ;	.line	54; main.c	init_timer();
000564   ec4d     call    0x000c9a, 0x0call    0x000c9a, 0x0 	CALL	_init_timer
000566   f006
                                           ;	.line	55; main.c	init_usart();
000568   ec14     call    0x000c28, 0x0call    0x000c28, 0x0 	CALL	_init_usart
00056a   f006
00056c   0100     movlb   0x0              	BANKSEL	_tx_fifo
                                           ;	.line	58; main.c	tx_fifo.head=0;
00056e   6b60     clrf    0x60, 0x1        	CLRF	_tx_fifo, B
000570   0100     movlb   0x0              	BANKSEL	(_tx_fifo + 1)
                                           ;	.line	59; main.c	tx_fifo.tail=0;
000572   6b61     clrf    0x61, 0x1        	CLRF	(_tx_fifo + 1), B
000574   0100     movlb   0x0              	BANKSEL	_rx_fifo
                                           ;	.line	60; main.c	rx_fifo.head=0;
000576   6ba2     clrf    0xa2, 0x1        	CLRF	_rx_fifo, B
000578   0100     movlb   0x0              	BANKSEL	(_rx_fifo + 1)
                                           ;	.line	61; main.c	rx_fifo.tail=0;
00057a   6ba3     clrf    0xa3, 0x1        	CLRF	(_rx_fifo + 1), B
                                           _00126_DS_:
                                           ;	.line	65; main.c	if ((do_print == 0) && (timer_ticks == 10)) {
00057c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00057e   e106     bnz     0x00058c         	BNZ	_00116_DS_
000580   0100     movlb   0x0              	BANKSEL	_timer_ticks
000582   51e4     movf    0xe4, 0x0, 0x1   	MOVF	_timer_ticks, W, B
000584   0a0a     xorlw   0x0a             	XORLW	0x0a
000586   e102     bnz     0x00058c         	BNZ	_00116_DS_
                                           ;	.line	66; main.c	do_print = 1;
000588   0e01     movlw   0x01             	MOVLW	0x01
00058a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _00116_DS_:
                                           ;	.line	68; main.c	if ((do_print == 1) && (timer_ticks == 100)) {
00058c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00058e   0a01     xorlw   0x01             	XORLW	0x01
000590   e131     bnz     0x0005f4         	BNZ	_00119_DS_
                                           _00154_DS_:
000592   0100     movlb   0x0              	BANKSEL	_timer_ticks
000594   51e4     movf    0xe4, 0x0, 0x1   	MOVF	_timer_ticks, W, B
000596   0a64     xorlw   0x64             	XORLW	0x64
000598   e12d     bnz     0x0005f4         	BNZ	_00119_DS_
                                           ;	.line	69; main.c	do_print = 0;
00059a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	70; main.c	puts_rom(s2);
00059c   0e00     movlw   0x00             	MOVLW	UPPER(_s2)
00059e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0005a0   0e0b     movlw   0x0b             	MOVLW	HIGH(_s2)
0005a2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0005a4   0ee2     movlw   0xe2             	MOVLW	LOW(_s2)
0005a6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0005a8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0005aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0005ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005b0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0005b2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005b4   ec51     call    0x000aa2, 0x0call    0x000aa2, 0x0 	CALL	_puts_rom
0005b6   f005
0005b8   0e03     movlw   0x03             	MOVLW	0x03
0005ba   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	71; main.c	ret=puts_rom_fifo(s1,&tx_fifo);
0005bc   0e00     movlw   0x00             	MOVLW	UPPER(_s1)
0005be   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0005c0   0e0b     movlw   0x0b             	MOVLW	HIGH(_s1)
0005c2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0005c4   0ec4     movlw   0xc4             	MOVLW	LOW(_s1)
0005c6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0005c8   0e00     movlw   0x00             	MOVLW	HIGH(_tx_fifo)
0005ca   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0005cc   0e60     movlw   0x60             	MOVLW	LOW(_tx_fifo)
0005ce   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0005d0   0e80     movlw   0x80             	MOVLW	0x80
0005d2   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0005d4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0005d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005d8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0005da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005dc   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0005de   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005e0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0005e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005e4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0005e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005e8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0005ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0005ec   ecfb     call    0x0003f6, 0x0call    0x0003f6, 0x0 	CALL	_puts_rom_fifo
0005ee   f001
0005f0   0e06     movlw   0x06             	MOVLW	0x06
0005f2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00119_DS_:
                                           ;	.line	73; main.c	ret=fifo_putchar(&tx_fifo);
0005f4   0e00     movlw   0x00             	MOVLW	HIGH(_tx_fifo)
0005f6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0005f8   0e60     movlw   0x60             	MOVLW	LOW(_tx_fifo)
0005fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0005fc   0e80     movlw   0x80             	MOVLW	0x80
0005fe   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000600   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000602   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000604   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000606   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000608   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00060a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00060c   eccb     call    0x000796, 0x0call    0x000796, 0x0 	CALL	_fifo_putchar
00060e   f003
000610   0e03     movlw   0x03             	MOVLW	0x03
000612   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	74; main.c	if (c=fifo_getchar(&rx_fifo)) {
000614   0e00     movlw   0x00             	MOVLW	HIGH(_rx_fifo)
000616   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000618   0ea2     movlw   0xa2             	MOVLW	LOW(_rx_fifo)
00061a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00061c   0e80     movlw   0x80             	MOVLW	0x80
00061e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000620   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000622   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000624   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000626   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000628   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00062a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00062c   ec54     call    0x0006a8, 0x0call    0x0006a8, 0x0 	CALL	_fifo_getchar
00062e   f003
000630   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000632   0e03     movlw   0x03             	MOVLW	0x03
000634   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
000636   c001     movff   0x001, 0x002     	MOVFF	r0x01, r0x02
000638   f002
00063a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00063c   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
00063e   d79e     bra     0x00057c         	BRA	_00126_DS_
                                           ;	.line	75; main.c	if (c==0x0d) {
000640   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000642   0a0d     xorlw   0x0d             	XORLW	0x0d
000644   e001     bz      0x000648         	BZ	_00158_DS_
000646   d79a     bra     0x00057c         	BRA	_00126_DS_
                                           _00158_DS_:
                                           ;	.line	76; main.c	copy_char_fifo(&rx_fifo,&tx_fifo);
000648   0e00     movlw   0x00             	MOVLW	HIGH(_rx_fifo)
00064a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00064c   0ea2     movlw   0xa2             	MOVLW	LOW(_rx_fifo)
00064e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000650   0e80     movlw   0x80             	MOVLW	0x80
000652   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000654   0e00     movlw   0x00             	MOVLW	HIGH(_tx_fifo)
000656   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
000658   0e60     movlw   0x60             	MOVLW	LOW(_tx_fifo)
00065a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00065c   0e80     movlw   0x80             	MOVLW	0x80
00065e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000660   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000662   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000664   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000666   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000668   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00066a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00066c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00066e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000670   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000672   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000674   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000676   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000678   ec06     call    0x00000c, 0x0call    0x00000c, 0x0 	CALL	_copy_char_fifo
00067a   f000
00067c   0e06     movlw   0x06             	MOVLW	0x06
00067e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	77; main.c	putchar_fifo(0x0a,&tx_fifo);
000680   0e00     movlw   0x00             	MOVLW	HIGH(_tx_fifo)
000682   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000684   0e60     movlw   0x60             	MOVLW	LOW(_tx_fifo)
000686   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000688   0e80     movlw   0x80             	MOVLW	0x80
00068a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00068c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00068e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000690   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000692   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000694   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000696   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000698   0e0a     movlw   0x0a             	MOVLW	0x0a
00069a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00069c   ec41     call    0x000882, 0x0call    0x000882, 0x0 	CALL	_putchar_fifo
00069e   f004
0006a0   0e04     movlw   0x04             	MOVLW	0x04
0006a2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0006a4   d76b     bra     0x00057c         	BRA	_00126_DS_
0006a6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__isr	code
                                           _isr:
                                           ;	.line	83; main.c	void isr() __interrupt 1 {
000a16   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
000a18   ffe5
000a1a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
000a1c   ffe5
000a1e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000a20   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
000a22   ffe5
000a24   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
000a26   ffe5
000a28   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
000a2a   ffe5
000a2c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
000a2e   ffe5
000a30   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
000a32   ffe5
000a34   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
000a36   ffe5
000a38   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000a3a   ffe5
000a3c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000a3e   ffd9
                                           ;	.line	84; main.c	if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
000a40   aaf2     btfss   0xf2, 0x5, 0x0   	BTFSS	_INTCONbits, 5
000a42   d01b     bra     0x000a7a         	BRA	_00174_DS_
000a44   a4f2     btfss   0xf2, 0x2, 0x0   	BTFSS	_INTCONbits, 2
000a46   d019     bra     0x000a7a         	BRA	_00174_DS_
000a48   0100     movlb   0x0              	BANKSEL	_timer_ticks
                                           ;	.line	86; main.c	timer_ticks++;
000a4a   2be4     incf    0xe4, 0x1, 0x1   	INCF	_timer_ticks, F, B
000a4c   0100     movlb   0x0              	BANKSEL	_timer_ticks
                                           ;	.line	87; main.c	if (timer_ticks==20) {  // 80 ms
000a4e   51e4     movf    0xe4, 0x0, 0x1   	MOVF	_timer_ticks, W, B
000a50   0a14     xorlw   0x14             	XORLW	0x14
000a52   e101     bnz     0x000a56         	BNZ	_00164_DS_
                                           ;	.line	88; main.c	LED = 0;		// LED OFF
000a54   9089     bcf     0x89, 0x0, 0x0   	BCF	_LATAbits, 0
                                           _00164_DS_:
000a56   0100     movlb   0x0              	BANKSEL	_timer_ticks
                                           ;	.line	90; main.c	if (timer_ticks==40) {  // 80 ms
000a58   51e4     movf    0xe4, 0x0, 0x1   	MOVF	_timer_ticks, W, B
000a5a   0a28     xorlw   0x28             	XORLW	0x28
000a5c   e101     bnz     0x000a60         	BNZ	_00166_DS_
                                           ;	.line	91; main.c	LED = 1;		// LED ON
000a5e   8089     bsf     0x89, 0x0, 0x0   	BSF	_LATAbits, 0
                                           _00166_DS_:
000a60   0100     movlb   0x0              	BANKSEL	_timer_ticks
                                           ;	.line	93; main.c	if (timer_ticks==60) {  // 80 ms
000a62   51e4     movf    0xe4, 0x0, 0x1   	MOVF	_timer_ticks, W, B
000a64   0a3c     xorlw   0x3c             	XORLW	0x3c
000a66   e101     bnz     0x000a6a         	BNZ	_00168_DS_
                                           ;	.line	94; main.c	LED = 0;		// LED OFF
000a68   9089     bcf     0x89, 0x0, 0x0   	BCF	_LATAbits, 0
                                           _00168_DS_:
000a6a   0100     movlb   0x0              	BANKSEL	_timer_ticks
                                           ;	.line	96; main.c	if (timer_ticks==250) { // 720 ms
000a6c   51e4     movf    0xe4, 0x0, 0x1   	MOVF	_timer_ticks, W, B
000a6e   0afa     xorlw   0xfa             	XORLW	0xfa
000a70   e103     bnz     0x000a78         	BNZ	_00170_DS_
                                           ;	.line	97; main.c	LED = 1;		// LED OFF
000a72   8089     bsf     0x89, 0x0, 0x0   	BSF	_LATAbits, 0
000a74   0100     movlb   0x0              	BANKSEL	_timer_ticks
                                           ;	.line	98; main.c	timer_ticks=0;
000a76   6be4     clrf    0xe4, 0x1        	CLRF	_timer_ticks, B
                                           _00170_DS_:
                                           ;	.line	100; main.c	INTCONbits.TMR0IF = 0;
000a78   94f2     bcf     0xf2, 0x2, 0x0   	BCF	_INTCONbits, 2
                                           _00174_DS_:
000a7a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000a7c   ffd9
000a7e   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
000a80   fffb
000a82   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
000a84   fffa
000a86   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
000a88   ffea
000a8a   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
000a8c   ffe9
000a8e   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
000a90   fff4
000a92   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
000a94   fff3
000a96   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000a98   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
000a9a   ffe0
000a9c   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
000a9e   ffd8
000aa0   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_timer	code
                                           _init_timer:
                                           ;	.line	27; main.c	void init_timer(void) {
000c9a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000c9c   ffe5
000c9e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000ca0   ffd9
                                           ;	.line	31; main.c	T0CONbits.T0PS0=1;    //Prescaler is divide by 256
000ca2   80d5     bsf     0xd5, 0x0, 0x0   	BSF	_T0CONbits, 0
                                           ;	.line	32; main.c	T0CONbits.T0PS1=1;
000ca4   82d5     bsf     0xd5, 0x1, 0x0   	BSF	_T0CONbits, 1
                                           ;	.line	33; main.c	T0CONbits.T0PS2=1;
000ca6   84d5     bsf     0xd5, 0x2, 0x0   	BSF	_T0CONbits, 2
                                           ;	.line	35; main.c	T0CONbits.PSA=0;      //Timer Clock Source is from Prescaler
000ca8   96d5     bcf     0xd5, 0x3, 0x0   	BCF	_T0CONbits, 3
                                           ;	.line	36; main.c	T0CONbits.T0CS=0;     //Prescaler gets clock from FCPU (16MHz)
000caa   9ad5     bcf     0xd5, 0x5, 0x0   	BCF	_T0CONbits, 5
                                           ;	.line	38; main.c	T0CONbits.T08BIT=1;   //8 BIT MODE
000cac   8cd5     bsf     0xd5, 0x6, 0x0   	BSF	_T0CONbits, 6
                                           ;	.line	40; main.c	INTCONbits.TMR0IE=1;   //Enable TIMER0 Interrupt
000cae   8af2     bsf     0xf2, 0x5, 0x0   	BSF	_INTCONbits, 5
                                           ;	.line	41; main.c	INTCONbits.PEIE=1;     //Enable Peripheral Interrupt
000cb0   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	42; main.c	INTCONbits.GIE=1;      //Enable INTs globally
000cb2   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	44; main.c	T0CONbits.TMR0ON=1;   //Now start the timer!
000cb4   8ed5     bsf     0xd5, 0x7, 0x0   	BSF	_T0CONbits, 7
000cb6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000cb8   ffd9
000cba   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_port	code
                                           _init_port:
                                           ;	.line	22; main.c	void init_port(void) {
000d10   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000d12   ffe5
000d14   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000d16   ffd9
                                           ;	.line	23; main.c	ADCON1 = 0x0F;		// Default all pins to digital
000d18   0e0f     movlw   0x0f             	MOVLW	0x0f
000d1a   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	24; main.c	LED_TRIS = 0;
000d1c   9092     bcf     0x92, 0x0, 0x0   	BCF	_TRISAbits, 0
000d1e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000d20   ffd9
000d22   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _s1:
000bc4   6963     setf    0x63, 0x1        	DB	0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x62, 0x75, 0x66
000bc6   6372     cpfseq  0x72, 0x1        
000bc8   6c75     negf    0x75, 0x0        
000bca   7261     btg     0x61, 0x1, 0x0   
000bcc   6220     cpfseq  0x20, 0x0        
000bce   6675     tstfsz  0x75, 0x0        
000bd0   6566     cpfsgt  0x66, 0x1        	DB	0x66, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x69
000bd2   2072     addwfc  0x72, 0x0, 0x0   
000bd4   7369     btg     0x69, 0x1, 0x1   
000bd6   7720     btg     0x20, 0x3, 0x1   
000bd8   726f     btg     0x6f, 0x1, 0x0   
000bda   696b     setf    0x6b, 0x1        
000bdc   676e     tstfsz  0x6e, 0x1        	DB	0x6e, 0x67, 0x21, 0x0d, 0x0a, 0x00
000bde   0d21     mullw   0x21             
000be0   000a     tblrd*-                  
                                           ; ; Starting pCode block for Ival
                                           _s2:
000be2   5355     movf    0x55, 0x1, 0x1   	DB	0x55, 0x53, 0x41, 0x52, 0x54, 0x20, 0x69, 0x73, 0x20, 0x77, 0x6f, 0x72
000be4   5241     movf    0x41, 0x1, 0x0   
000be6   2054     addwfc  0x54, 0x0, 0x0   
000be8   7369     btg     0x69, 0x1, 0x1   
000bea   7720     btg     0x20, 0x3, 0x1   
000bec   726f     btg     0x6f, 0x1, 0x0   
000bee   696b     setf    0x6b, 0x1        	DB	0x6b, 0x69, 0x6e, 0x67, 0x21, 0x0d, 0x0a, 0x00
000bf0   676e     tstfsz  0x6e, 0x1        
000bf2   0d21     mullw   0x21             
000bf4   000a     tblrd*-                  
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  538 (0x021a) bytes ( 0.41%)
                                           ;           	  269 (0x010d) words
                                           ; udata size:	  132 (0x0084) bytes ( 3.89%)
                                           ; access size:	    7 (0x0007) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jul  7 2015) (Linux)
                                           ; This file was generated Tue Nov 17 14:29:38 2015
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k80
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_init_usart
                                           	global	_putchar
                                           	global	_putchar_wait
                                           	global	_print_hex_wait
                                           	global	_puts_rom
                                           	global	_print_debug_value
                                           	global	_print_debug_fifo
                                           	global	_putchar_fifo
                                           	global	_fifo_getchar
                                           	global	_fifo_putchar
                                           	global	_puts_rom_fifo
                                           	global	_copy_char_fifo
                                           	global	_sData
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	__gptrput1
                                           	extern	_RXERRCNTbits
                                           	extern	_TXERRCNTbits
                                           	extern	_BRGCON1bits
                                           	extern	_BRGCON2bits
                                           	extern	_BRGCON3bits
                                           	extern	_RXFCON0bits
                                           	extern	_RXFCON1bits
                                           	extern	_RXF6SIDHbits
                                           	extern	_RXF6SIDLbits
                                           	extern	_RXF6EIDHbits
                                           	extern	_RXF6EIDLbits
                                           	extern	_RXF7SIDHbits
                                           	extern	_RXF7SIDLbits
                                           	extern	_RXF7EIDHbits
                                           	extern	_RXF7EIDLbits
                                           	extern	_RXF8SIDHbits
                                           	extern	_RXF8SIDLbits
                                           	extern	_RXF8EIDHbits
                                           	extern	_RXF8EIDLbits
                                           	extern	_RXF9SIDHbits
                                           	extern	_RXF9SIDLbits
                                           	extern	_RXF9EIDHbits
                                           	extern	_RXF9EIDLbits
                                           	extern	_RXF10SIDHbits
                                           	extern	_RXF10SIDLbits
                                           	extern	_RXF10EIDHbits
                                           	extern	_RXF10EIDLbits
                                           	extern	_RXF11SIDHbits
                                           	extern	_RXF11SIDLbits
                                           	extern	_RXF11EIDHbits
                                           	extern	_RXF11EIDLbits
                                           	extern	_RXF12SIDHbits
                                           	extern	_RXF12SIDLbits
                                           	extern	_RXF12EIDHbits
                                           	extern	_RXF12EIDLbits
                                           	extern	_RXF13SIDHbits
                                           	extern	_RXF13SIDLbits
                                           	extern	_RXF13EIDHbits
                                           	extern	_RXF13EIDLbits
                                           	extern	_RXF14SIDHbits
                                           	extern	_RXF14SIDLbits
                                           	extern	_RXF14EIDHbits
                                           	extern	_RXF14EIDLbits
                                           	extern	_RXF15SIDHbits
                                           	extern	_RXF15SIDLbits
                                           	extern	_RXF15EIDHbits
                                           	extern	_RXF15EIDLbits
                                           	extern	_SDFLCbits
                                           	extern	_RXFBCON0bits
                                           	extern	_RXFBCON1bits
                                           	extern	_RXFBCON2bits
                                           	extern	_RXFBCON3bits
                                           	extern	_RXFBCON4bits
                                           	extern	_RXFBCON5bits
                                           	extern	_RXFBCON6bits
                                           	extern	_RXFBCON7bits
                                           	extern	_MSEL0bits
                                           	extern	_MSEL1bits
                                           	extern	_MSEL2bits
                                           	extern	_MSEL3bits
                                           	extern	_BSEL0bits
                                           	extern	_BIE0bits
                                           	extern	_TXBIEbits
                                           	extern	_B0CONbits
                                           	extern	_B0SIDHbits
                                           	extern	_B0SIDLbits
                                           	extern	_B0EIDHbits
                                           	extern	_B0EIDLbits
                                           	extern	_B0DLCbits
                                           	extern	_B0D0bits
                                           	extern	_B0D1bits
                                           	extern	_B0D2bits
                                           	extern	_B0D3bits
                                           	extern	_B0D4bits
                                           	extern	_B0D5bits
                                           	extern	_B0D6bits
                                           	extern	_B0D7bits
                                           	extern	_CANSTAT_RO9bits
                                           	extern	_CANCON_RO9bits
                                           	extern	_B1CONbits
                                           	extern	_B1SIDHbits
                                           	extern	_B1SIDLbits
                                           	extern	_B1EIDHbits
                                           	extern	_B1EIDLbits
                                           	extern	_B1DLCbits
                                           	extern	_B1D0bits
                                           	extern	_B1D1bits
                                           	extern	_B1D2bits
                                           	extern	_B1D3bits
                                           	extern	_B1D4bits
                                           	extern	_B1D5bits
                                           	extern	_B1D6bits
                                           	extern	_B1D7bits
                                           	extern	_CANSTAT_RO8bits
                                           	extern	_CANCON_RO8bits
                                           	extern	_B2CONbits
                                           	extern	_B2SIDHbits
                                           	extern	_B2SIDLbits
                                           	extern	_B2EIDHbits
                                           	extern	_B2EIDLbits
                                           	extern	_B2DLCbits
                                           	extern	_B2D0bits
                                           	extern	_B2D1bits
                                           	extern	_B2D2bits
                                           	extern	_B2D3bits
                                           	extern	_B2D4bits
                                           	extern	_B2D5bits
                                           	extern	_B2D6bits
                                           	extern	_B2D7bits
                                           	extern	_CANSTAT_RO7bits
                                           	extern	_CANCON_RO7bits
                                           	extern	_B3CONbits
                                           	extern	_B3SIDHbits
                                           	extern	_B3SIDLbits
                                           	extern	_B3EIDHbits
                                           	extern	_B3EIDLbits
                                           	extern	_B3DLCbits
                                           	extern	_B3D0bits
                                           	extern	_B3D1bits
                                           	extern	_B3D2bits
                                           	extern	_B3D3bits
                                           	extern	_B3D4bits
                                           	extern	_B3D5bits
                                           	extern	_B3D6bits
                                           	extern	_B3D7bits
                                           	extern	_CANSTAT_RO6bits
                                           	extern	_CANCON_RO6bits
                                           	extern	_B4CONbits
                                           	extern	_B4SIDHbits
                                           	extern	_B4SIDLbits
                                           	extern	_B4EIDHbits
                                           	extern	_B4EIDLbits
                                           	extern	_B4DLCbits
                                           	extern	_B4D0bits
                                           	extern	_B4D1bits
                                           	extern	_B4D2bits
                                           	extern	_B4D3bits
                                           	extern	_B4D4bits
                                           	extern	_B4D5bits
                                           	extern	_B4D6bits
                                           	extern	_B4D7bits
                                           	extern	_CANSTAT_RO5bits
                                           	extern	_CANCON_RO5bits
                                           	extern	_B5CONbits
                                           	extern	_B5SIDHbits
                                           	extern	_B5SIDLbits
                                           	extern	_B5EIDHbits
                                           	extern	_B5EIDLbits
                                           	extern	_B5DLCbits
                                           	extern	_B5D0bits
                                           	extern	_B5D1bits
                                           	extern	_B5D2bits
                                           	extern	_B5D3bits
                                           	extern	_B5D4bits
                                           	extern	_B5D5bits
                                           	extern	_B5D6bits
                                           	extern	_B5D7bits
                                           	extern	_CANSTAT_RO4bits
                                           	extern	_CANCON_RO4bits
                                           	extern	_RXF0SIDHbits
                                           	extern	_RXF0SIDLbits
                                           	extern	_RXF0EIDHbits
                                           	extern	_RXF0EIDLbits
                                           	extern	_RXF1SIDHbits
                                           	extern	_RXF1SIDLbits
                                           	extern	_RXF1EIDHbits
                                           	extern	_RXF1EIDLbits
                                           	extern	_RXF2SIDHbits
                                           	extern	_RXF2SIDLbits
                                           	extern	_RXF2EIDHbits
                                           	extern	_RXF2EIDLbits
                                           	extern	_RXF3SIDHbits
                                           	extern	_RXF3SIDLbits
                                           	extern	_RXF3EIDHbits
                                           	extern	_RXF3EIDLbits
                                           	extern	_RXF4SIDHbits
                                           	extern	_RXF4SIDLbits
                                           	extern	_RXF4EIDHbits
                                           	extern	_RXF4EIDLbits
                                           	extern	_RXF5SIDHbits
                                           	extern	_RXF5SIDLbits
                                           	extern	_RXF5EIDHbits
                                           	extern	_RXF5EIDLbits
                                           	extern	_RXM0SIDHbits
                                           	extern	_RXM0SIDLbits
                                           	extern	_RXM0EIDHbits
                                           	extern	_RXM0EIDLbits
                                           	extern	_RXM1SIDHbits
                                           	extern	_RXM1SIDLbits
                                           	extern	_RXM1EIDHbits
                                           	extern	_RXM1EIDLbits
                                           	extern	_TXB2CONbits
                                           	extern	_TXB2SIDHbits
                                           	extern	_TXB2SIDLbits
                                           	extern	_TXB2EIDHbits
                                           	extern	_TXB2EIDLbits
                                           	extern	_TXB2DLCbits
                                           	extern	_TXB2D0bits
                                           	extern	_TXB2D1bits
                                           	extern	_TXB2D2bits
                                           	extern	_TXB2D3bits
                                           	extern	_TXB2D4bits
                                           	extern	_TXB2D5bits
                                           	extern	_TXB2D6bits
                                           	extern	_TXB2D7bits
                                           	extern	_CANSTAT_RO3bits
                                           	extern	_CANCON_RO3bits
                                           	extern	_TXB1CONbits
                                           	extern	_TXB1SIDHbits
                                           	extern	_TXB1SIDLbits
                                           	extern	_TXB1EIDHbits
                                           	extern	_TXB1EIDLbits
                                           	extern	_TXB1DLCbits
                                           	extern	_TXB1D0bits
                                           	extern	_TXB1D1bits
                                           	extern	_TXB1D2bits
                                           	extern	_TXB1D3bits
                                           	extern	_TXB1D4bits
                                           	extern	_TXB1D5bits
                                           	extern	_TXB1D6bits
                                           	extern	_TXB1D7bits
                                           	extern	_CANSTAT_RO2bits
                                           	extern	_CANCON_RO2bits
                                           	extern	_TXB0CONbits
                                           	extern	_TXB0SIDHbits
                                           	extern	_TXB0SIDLbits
                                           	extern	_TXB0EIDHbits
                                           	extern	_TXB0EIDLbits
                                           	extern	_TXB0DLCbits
                                           	extern	_TXB0D0bits
                                           	extern	_TXB0D1bits
                                           	extern	_TXB0D2bits
                                           	extern	_TXB0D3bits
                                           	extern	_TXB0D4bits
                                           	extern	_TXB0D5bits
                                           	extern	_TXB0D6bits
                                           	extern	_TXB0D7bits
                                           	extern	_CANSTAT_RO1bits
                                           	extern	_CANCON_RO1bits
                                           	extern	_RXB1CONbits
                                           	extern	_RXB1SIDHbits
                                           	extern	_RXB1SIDLbits
                                           	extern	_RXB1EIDHbits
                                           	extern	_RXB1EIDLbits
                                           	extern	_RXB1DLCbits
                                           	extern	_RXB1D0bits
                                           	extern	_RXB1D1bits
                                           	extern	_RXB1D2bits
                                           	extern	_RXB1D3bits
                                           	extern	_RXB1D4bits
                                           	extern	_RXB1D5bits
                                           	extern	_RXB1D6bits
                                           	extern	_RXB1D7bits
                                           	extern	_CANSTAT_RO0bits
                                           	extern	_CANCON_RO0bits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_ECCP2CONbits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCONHbits
                                           	extern	_PADCFG1bits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_IOCBbits
                                           	extern	_WPUBbits
                                           	extern	_ANCON1bits
                                           	extern	_ANCON0bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON1bits
                                           	extern	_RXB0CONbits
                                           	extern	_RXB0SIDHbits
                                           	extern	_RXB0SIDLbits
                                           	extern	_RXB0EIDHbits
                                           	extern	_RXB0EIDLbits
                                           	extern	_RXB0DLCbits
                                           	extern	_RXB0D0bits
                                           	extern	_RXB0D1bits
                                           	extern	_RXB0D2bits
                                           	extern	_RXB0D3bits
                                           	extern	_RXB0D4bits
                                           	extern	_RXB0D5bits
                                           	extern	_RXB0D6bits
                                           	extern	_RXB0D7bits
                                           	extern	_CANSTATbits
                                           	extern	_CANCONbits
                                           	extern	_CIOCONbits
                                           	extern	_COMSTATbits
                                           	extern	_ECANCONbits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_EECON1bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_T4CONbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_SLRCONbits
                                           	extern	_ODCONbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_CCPTMRSbits
                                           	extern	_REFOCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_RCSTA2bits
                                           	extern	_BAUDCON1bits
                                           	extern	_HLVDCONbits
                                           	extern	_T1GCONbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3GCONbits
                                           	extern	_T3CONbits
                                           	extern	_CMSTATbits
                                           	extern	_CMSTATUSbits
                                           	extern	_CVRCONbits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_BAUDCON2bits
                                           	extern	_TXSTA2bits
                                           	extern	_CCP1CONbits
                                           	extern	_ECCP1CONbits
                                           	extern	_ECCP1DELbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_SSPADDbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_INTCON1bits
                                           	extern	_STKPTRbits
                                           	extern	_RXERRCNT
                                           	extern	_TXERRCNT
                                           	extern	_BRGCON1
                                           	extern	_BRGCON2
                                           	extern	_BRGCON3
                                           	extern	_RXFCON0
                                           	extern	_RXFCON1
                                           	extern	_RXF6SIDH
                                           	extern	_RXF6SIDL
                                           	extern	_RXF6EIDH
                                           	extern	_RXF6EIDL
                                           	extern	_RXF7SIDH
                                           	extern	_RXF7SIDL
                                           	extern	_RXF7EIDH
                                           	extern	_RXF7EIDL
                                           	extern	_RXF8SIDH
                                           	extern	_RXF8SIDL
                                           	extern	_RXF8EIDH
                                           	extern	_RXF8EIDL
                                           	extern	_RXF9SIDH
                                           	extern	_RXF9SIDL
                                           	extern	_RXF9EIDH
                                           	extern	_RXF9EIDL
                                           	extern	_RXF10SIDH
                                           	extern	_RXF10SIDL
                                           	extern	_RXF10EIDH
                                           	extern	_RXF10EIDL
                                           	extern	_RXF11SIDH
                                           	extern	_RXF11SIDL
                                           	extern	_RXF11EIDH
                                           	extern	_RXF11EIDL
                                           	extern	_RXF12SIDH
                                           	extern	_RXF12SIDL
                                           	extern	_RXF12EIDH
                                           	extern	_RXF12EIDL
                                           	extern	_RXF13SIDH
                                           	extern	_RXF13SIDL
                                           	extern	_RXF13EIDH
                                           	extern	_RXF13EIDL
                                           	extern	_RXF14SIDH
                                           	extern	_RXF14SIDL
                                           	extern	_RXF14EIDH
                                           	extern	_RXF14EIDL
                                           	extern	_RXF15SIDH
                                           	extern	_RXF15SIDL
                                           	extern	_RXF15EIDH
                                           	extern	_RXF15EIDL
                                           	extern	_SDFLC
                                           	extern	_RXFBCON0
                                           	extern	_RXFBCON1
                                           	extern	_RXFBCON2
                                           	extern	_RXFBCON3
                                           	extern	_RXFBCON4
                                           	extern	_RXFBCON5
                                           	extern	_RXFBCON6
                                           	extern	_RXFBCON7
                                           	extern	_MSEL0
                                           	extern	_MSEL1
                                           	extern	_MSEL2
                                           	extern	_MSEL3
                                           	extern	_BSEL0
                                           	extern	_BIE0
                                           	extern	_TXBIE
                                           	extern	_B0CON
                                           	extern	_B0SIDH
                                           	extern	_B0SIDL
                                           	extern	_B0EIDH
                                           	extern	_B0EIDL
                                           	extern	_B0DLC
                                           	extern	_B0D0
                                           	extern	_B0D1
                                           	extern	_B0D2
                                           	extern	_B0D3
                                           	extern	_B0D4
                                           	extern	_B0D5
                                           	extern	_B0D6
                                           	extern	_B0D7
                                           	extern	_CANSTAT_RO9
                                           	extern	_CANCON_RO9
                                           	extern	_B1CON
                                           	extern	_B1SIDH
                                           	extern	_B1SIDL
                                           	extern	_B1EIDH
                                           	extern	_B1EIDL
                                           	extern	_B1DLC
                                           	extern	_B1D0
                                           	extern	_B1D1
                                           	extern	_B1D2
                                           	extern	_B1D3
                                           	extern	_B1D4
                                           	extern	_B1D5
                                           	extern	_B1D6
                                           	extern	_B1D7
                                           	extern	_CANSTAT_RO8
                                           	extern	_CANCON_RO8
                                           	extern	_B2CON
                                           	extern	_B2SIDH
                                           	extern	_B2SIDL
                                           	extern	_B2EIDH
                                           	extern	_B2EIDL
                                           	extern	_B2DLC
                                           	extern	_B2D0
                                           	extern	_B2D1
                                           	extern	_B2D2
                                           	extern	_B2D3
                                           	extern	_B2D4
                                           	extern	_B2D5
                                           	extern	_B2D6
                                           	extern	_B2D7
                                           	extern	_CANSTAT_RO7
                                           	extern	_CANCON_RO7
                                           	extern	_B3CON
                                           	extern	_B3SIDH
                                           	extern	_B3SIDL
                                           	extern	_B3EIDH
                                           	extern	_B3EIDL
                                           	extern	_B3DLC
                                           	extern	_B3D0
                                           	extern	_B3D1
                                           	extern	_B3D2
                                           	extern	_B3D3
                                           	extern	_B3D4
                                           	extern	_B3D5
                                           	extern	_B3D6
                                           	extern	_B3D7
                                           	extern	_CANSTAT_RO6
                                           	extern	_CANCON_RO6
                                           	extern	_B4CON
                                           	extern	_B4SIDH
                                           	extern	_B4SIDL
                                           	extern	_B4EIDH
                                           	extern	_B4EIDL
                                           	extern	_B4DLC
                                           	extern	_B4D0
                                           	extern	_B4D1
                                           	extern	_B4D2
                                           	extern	_B4D3
                                           	extern	_B4D4
                                           	extern	_B4D5
                                           	extern	_B4D6
                                           	extern	_B4D7
                                           	extern	_CANSTAT_RO5
                                           	extern	_CANCON_RO5
                                           	extern	_B5CON
                                           	extern	_B5SIDH
                                           	extern	_B5SIDL
                                           	extern	_B5EIDH
                                           	extern	_B5EIDL
                                           	extern	_B5DLC
                                           	extern	_B5D0
                                           	extern	_B5D1
                                           	extern	_B5D2
                                           	extern	_B5D3
                                           	extern	_B5D4
                                           	extern	_B5D5
                                           	extern	_B5D6
                                           	extern	_B5D7
                                           	extern	_CANSTAT_RO4
                                           	extern	_CANCON_RO4
                                           	extern	_RXF0SIDH
                                           	extern	_RXF0SIDL
                                           	extern	_RXF0EIDH
                                           	extern	_RXF0EIDL
                                           	extern	_RXF1SIDH
                                           	extern	_RXF1SIDL
                                           	extern	_RXF1EIDH
                                           	extern	_RXF1EIDL
                                           	extern	_RXF2SIDH
                                           	extern	_RXF2SIDL
                                           	extern	_RXF2EIDH
                                           	extern	_RXF2EIDL
                                           	extern	_RXF3SIDH
                                           	extern	_RXF3SIDL
                                           	extern	_RXF3EIDH
                                           	extern	_RXF3EIDL
                                           	extern	_RXF4SIDH
                                           	extern	_RXF4SIDL
                                           	extern	_RXF4EIDH
                                           	extern	_RXF4EIDL
                                           	extern	_RXF5SIDH
                                           	extern	_RXF5SIDL
                                           	extern	_RXF5EIDH
                                           	extern	_RXF5EIDL
                                           	extern	_RXM0SIDH
                                           	extern	_RXM0SIDL
                                           	extern	_RXM0EIDH
                                           	extern	_RXM0EIDL
                                           	extern	_RXM1SIDH
                                           	extern	_RXM1SIDL
                                           	extern	_RXM1EIDH
                                           	extern	_RXM1EIDL
                                           	extern	_TXB2CON
                                           	extern	_TXB2SIDH
                                           	extern	_TXB2SIDL
                                           	extern	_TXB2EIDH
                                           	extern	_TXB2EIDL
                                           	extern	_TXB2DLC
                                           	extern	_TXB2D0
                                           	extern	_TXB2D1
                                           	extern	_TXB2D2
                                           	extern	_TXB2D3
                                           	extern	_TXB2D4
                                           	extern	_TXB2D5
                                           	extern	_TXB2D6
                                           	extern	_TXB2D7
                                           	extern	_CANSTAT_RO3
                                           	extern	_CANCON_RO3
                                           	extern	_TXB1CON
                                           	extern	_TXB1SIDH
                                           	extern	_TXB1SIDL
                                           	extern	_TXB1EIDH
                                           	extern	_TXB1EIDL
                                           	extern	_TXB1DLC
                                           	extern	_TXB1D0
                                           	extern	_TXB1D1
                                           	extern	_TXB1D2
                                           	extern	_TXB1D3
                                           	extern	_TXB1D4
                                           	extern	_TXB1D5
                                           	extern	_TXB1D6
                                           	extern	_TXB1D7
                                           	extern	_CANSTAT_RO2
                                           	extern	_CANCON_RO2
                                           	extern	_TXB0CON
                                           	extern	_TXB0SIDH
                                           	extern	_TXB0SIDL
                                           	extern	_TXB0EIDH
                                           	extern	_TXB0EIDL
                                           	extern	_TXB0DLC
                                           	extern	_TXB0D0
                                           	extern	_TXB0D1
                                           	extern	_TXB0D2
                                           	extern	_TXB0D3
                                           	extern	_TXB0D4
                                           	extern	_TXB0D5
                                           	extern	_TXB0D6
                                           	extern	_TXB0D7
                                           	extern	_CANSTAT_RO1
                                           	extern	_CANCON_RO1
                                           	extern	_RXB1CON
                                           	extern	_RXB1SIDH
                                           	extern	_RXB1SIDL
                                           	extern	_RXB1EIDH
                                           	extern	_RXB1EIDL
                                           	extern	_RXB1DLC
                                           	extern	_RXB1D0
                                           	extern	_RXB1D1
                                           	extern	_RXB1D2
                                           	extern	_RXB1D3
                                           	extern	_RXB1D4
                                           	extern	_RXB1D5
                                           	extern	_RXB1D6
                                           	extern	_RXB1D7
                                           	extern	_CANSTAT_RO0
                                           	extern	_CANCON_RO0
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_CCP2CON
                                           	extern	_ECCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CTMUICON
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCONH
                                           	extern	_PADCFG1
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_IOCB
                                           	extern	_WPUB
                                           	extern	_ANCON1
                                           	extern	_ANCON0
                                           	extern	_CM2CON
                                           	extern	_CM2CON1
                                           	extern	_CM1CON
                                           	extern	_CM1CON1
                                           	extern	_RXB0CON
                                           	extern	_RXB0SIDH
                                           	extern	_RXB0SIDL
                                           	extern	_RXB0EIDH
                                           	extern	_RXB0EIDL
                                           	extern	_RXB0DLC
                                           	extern	_RXB0D0
                                           	extern	_RXB0D1
                                           	extern	_RXB0D2
                                           	extern	_RXB0D3
                                           	extern	_RXB0D4
                                           	extern	_RXB0D5
                                           	extern	_RXB0D6
                                           	extern	_RXB0D7
                                           	extern	_CANSTAT
                                           	extern	_CANCON
                                           	extern	_CIOCON
                                           	extern	_COMSTAT
                                           	extern	_ECANCON
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_TXREG2
                                           	extern	_RCREG2
                                           	extern	_SPBRG2
                                           	extern	_SPBRGH2
                                           	extern	_SPBRGH1
                                           	extern	_EECON2
                                           	extern	_EECON1
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_TMR4
                                           	extern	_T4CON
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_SLRCON
                                           	extern	_ODCON
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_CCPTMRS
                                           	extern	_REFOCON
                                           	extern	_OSCTUNE
                                           	extern	_PSTR1CON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_RCSTA2
                                           	extern	_BAUDCON1
                                           	extern	_HLVDCON
                                           	extern	_PR4
                                           	extern	_T1GCON
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_T3GCON
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMSTAT
                                           	extern	_CMSTATUS
                                           	extern	_CVRCON
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_BAUDCON2
                                           	extern	_TXSTA2
                                           	extern	_CCP1CON
                                           	extern	_ECCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ECCP1DEL
                                           	extern	_PWM1CON
                                           	extern	_ECCP1AS
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_INTCON1
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           r0x11	res	1
                                           r0x12	res	1
                                           r0x13	res	1
                                           r0x14	res	1
                                           r0x15	res	1
                                           r0x16	res	1
                                           r0x17	res	1
                                           r0x18	res	1
                                           r0x19	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_usart__copy_char_fifo	code
                                           _copy_char_fifo:
                                           ;	.line	172; usart.c	char copy_char_fifo(struct serial_buffer * source_fifo, struct serial_buffer * destination_fifo) {
00000c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00000e   ffe5
000010   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000012   ffd9
000014   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000016   ffe5
000018   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00001a   ffe5
00001c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00001e   ffe5
000020   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000022   ffe5
000024   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000026   ffe5
000028   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00002a   ffe5
00002c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00002e   ffe5
000030   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
000032   ffe5
000034   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
000036   ffe5
000038   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
00003a   ffe5
00003c   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00003e   ffe5
000040   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
000042   ffe5
000044   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
000046   ffe5
000048   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
00004a   ffe5
00004c   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
00004e   ffe5
000050   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
000052   ffe5
000054   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
000056   ffe5
000058   c011     movff   0x011, 0xfe5     	MOVFF	r0x11, POSTDEC1
00005a   ffe5
00005c   c012     movff   0x012, 0xfe5     	MOVFF	r0x12, POSTDEC1
00005e   ffe5
000060   c013     movff   0x013, 0xfe5     	MOVFF	r0x13, POSTDEC1
000062   ffe5
000064   c014     movff   0x014, 0xfe5     	MOVFF	r0x14, POSTDEC1
000066   ffe5
000068   c015     movff   0x015, 0xfe5     	MOVFF	r0x15, POSTDEC1
00006a   ffe5
00006c   c016     movff   0x016, 0xfe5     	MOVFF	r0x16, POSTDEC1
00006e   ffe5
000070   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
000072   ffe5
000074   c018     movff   0x018, 0xfe5     	MOVFF	r0x18, POSTDEC1
000076   ffe5
000078   c019     movff   0x019, 0xfe5     	MOVFF	r0x19, POSTDEC1
00007a   ffe5
00007c   0e02     movlw   0x02             	MOVLW	0x02
00007e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000080   f000
000082   0e03     movlw   0x03             	MOVLW	0x03
000084   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
000086   f001
000088   0e04     movlw   0x04             	MOVLW	0x04
00008a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00008c   f002
00008e   0e05     movlw   0x05             	MOVLW	0x05
000090   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
000092   f003
000094   0e06     movlw   0x06             	MOVLW	0x06
000096   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
000098   f004
00009a   0e07     movlw   0x07             	MOVLW	0x07
00009c   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
00009e   f005
                                           ;	.line	175; usart.c	source_tail=source_fifo->tail;
0000a0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0000a2   0f01     addlw   0x01             	ADDLW	0x01
0000a4   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0000a6   0e00     movlw   0x00             	MOVLW	0x00
0000a8   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0000aa   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0000ac   0e00     movlw   0x00             	MOVLW	0x00
0000ae   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0000b0   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0000b2   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
0000b4   ffe9
0000b6   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
0000b8   fff3
0000ba   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0000bc   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0000be   f006
0000c0   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
                                           ;	.line	178; usart.c	if ( source_tail == source_fifo->head) {
0000c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0000c4   ffe9
0000c6   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0000c8   fff3
0000ca   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0000cc   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0000ce   f006
0000d0   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
0000d2   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0000d4   180a     xorwf   0x0a, 0x0, 0x0   	XORWF	r0x0a, W
0000d6   e102     bnz     0x0000dc         	BNZ	_00265_DS_
                                           ;	.line	179; usart.c	return 0;
0000d8   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0000da   d08a     bra     0x0001f0         	BRA	_00267_DS_
                                           _00265_DS_:
                                           ;	.line	181; usart.c	destination_head = destination_fifo->head;
0000dc   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0000de   ffe9
0000e0   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0000e2   fff3
0000e4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0000e6   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0000e8   f006
0000ea   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
                                           ;	.line	182; usart.c	destination_head++;
0000ec   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
                                           ;	.line	183; usart.c	destination_head &= SERIAL_BUFFER_SIZE_MASK;
0000ee   0e3f     movlw   0x3f             	MOVLW	0x3f
0000f0   160a     andwf   0x0a, 0x1, 0x0   	ANDWF	r0x0a, F
                                           ;	.line	184; usart.c	while ((destination_head !=  destination_fifo->tail) && (source_tail != source_fifo->head)) {
0000f2   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0000f4   0f02     addlw   0x02             	ADDLW	0x02
0000f6   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
0000f8   0e00     movlw   0x00             	MOVLW	0x00
0000fa   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
0000fc   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
0000fe   0e00     movlw   0x00             	MOVLW	0x00
000100   2005     addwfc  0x05, 0x0, 0x0   	ADDWFC	r0x05, W
000102   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
000104   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000106   0f02     addlw   0x02             	ADDLW	0x02
000108   6e0e     movwf   0x0e, 0x0        	MOVWF	r0x0e
00010a   0e00     movlw   0x00             	MOVLW	0x00
00010c   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00010e   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
000110   0e00     movlw   0x00             	MOVLW	0x00
000112   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
000114   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
000116   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000118   0f01     addlw   0x01             	ADDLW	0x01
00011a   6e11     movwf   0x11, 0x0        	MOVWF	r0x11
00011c   0e00     movlw   0x00             	MOVLW	0x00
00011e   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
000120   6e12     movwf   0x12, 0x0        	MOVWF	r0x12
000122   0e00     movlw   0x00             	MOVLW	0x00
000124   2005     addwfc  0x05, 0x0, 0x0   	ADDWFC	r0x05, W
000126   6e13     movwf   0x13, 0x0        	MOVWF	r0x13
                                           _00261_DS_:
000128   c011     movff   0x011, 0xfe9     	MOVFF	r0x11, FSR0L
00012a   ffe9
00012c   c012     movff   0x012, 0xff3     	MOVFF	r0x12, PRODL
00012e   fff3
000130   5013     movf    0x13, 0x0, 0x0   	MOVF	r0x13, W
000132   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
000134   f006
000136   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
000138   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00013a   1814     xorwf   0x14, 0x0, 0x0   	XORWF	r0x14, W
00013c   e101     bnz     0x000140         	BNZ	_00285_DS_
00013e   d03e     bra     0x0001bc         	BRA	_00263_DS_
                                           _00285_DS_:
000140   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000142   ffe9
000144   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
000146   fff3
000148   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00014a   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
00014c   f006
00014e   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
000150   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
000152   1814     xorwf   0x14, 0x0, 0x0   	XORWF	r0x14, W
000154   e033     bz      0x0001bc         	BZ	_00263_DS_
                                           ;	.line	185; usart.c	source_tail++;
000156   2a09     incf    0x09, 0x1, 0x0   	INCF	r0x09, F
                                           ;	.line	186; usart.c	source_tail &= SERIAL_BUFFER_SIZE_MASK;
000158   0e3f     movlw   0x3f             	MOVLW	0x3f
00015a   1609     andwf   0x09, 0x1, 0x0   	ANDWF	r0x09, F
                                           ;	.line	187; usart.c	destination_fifo->data[destination_head] = source_fifo->data[source_tail];
00015c   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00015e   240b     addwf   0x0b, 0x0, 0x0   	ADDWF	r0x0b, W
000160   6e14     movwf   0x14, 0x0        	MOVWF	r0x14
000162   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
000164   200c     addwfc  0x0c, 0x0, 0x0   	ADDWFC	r0x0c, W
000166   6e15     movwf   0x15, 0x0        	MOVWF	r0x15
000168   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00016a   200d     addwfc  0x0d, 0x0, 0x0   	ADDWFC	r0x0d, W
00016c   6e16     movwf   0x16, 0x0        	MOVWF	r0x16
00016e   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
000170   240e     addwf   0x0e, 0x0, 0x0   	ADDWF	r0x0e, W
000172   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
000174   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
000176   200f     addwfc  0x0f, 0x0, 0x0   	ADDWFC	r0x0f, W
000178   6e18     movwf   0x18, 0x0        	MOVWF	r0x18
00017a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00017c   2010     addwfc  0x10, 0x0, 0x0   	ADDWFC	r0x10, W
00017e   6e19     movwf   0x19, 0x0        	MOVWF	r0x19
000180   c017     movff   0x017, 0xfe9     	MOVFF	r0x17, FSR0L
000182   ffe9
000184   c018     movff   0x018, 0xff3     	MOVFF	r0x18, PRODL
000186   fff3
000188   5019     movf    0x19, 0x0, 0x0   	MOVF	r0x19, W
00018a   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
00018c   f006
00018e   6e17     movwf   0x17, 0x0        	MOVWF	r0x17
000190   c017     movff   0x017, 0xfe5     	MOVFF	r0x17, POSTDEC1
000192   ffe5
000194   c014     movff   0x014, 0xfe9     	MOVFF	r0x14, FSR0L
000196   ffe9
000198   c015     movff   0x015, 0xff3     	MOVFF	r0x15, PRODL
00019a   fff3
00019c   5016     movf    0x16, 0x0, 0x0   	MOVF	r0x16, W
00019e   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
0001a0   f006
                                           ;	.line	188; usart.c	destination_fifo->head = destination_head;		/* store new pointer destination head before increment*/
0001a2   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
0001a4   ffe5
0001a6   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0001a8   ffe9
0001aa   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0001ac   fff3
0001ae   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0001b0   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
0001b2   f006
                                           ;	.line	189; usart.c	destination_head++;
0001b4   2a0a     incf    0x0a, 0x1, 0x0   	INCF	r0x0a, F
                                           ;	.line	190; usart.c	destination_head &= SERIAL_BUFFER_SIZE_MASK;
0001b6   0e3f     movlw   0x3f             	MOVLW	0x3f
0001b8   160a     andwf   0x0a, 0x1, 0x0   	ANDWF	r0x0a, F
0001ba   d7b6     bra     0x000128         	BRA	_00261_DS_
                                           _00263_DS_:
                                           ;	.line	192; usart.c	source_fifo->tail      = source_tail;			/* store new pointer source tail */
0001bc   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
0001be   ffe5
0001c0   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
0001c2   ffe9
0001c4   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
0001c6   fff3
0001c8   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0001ca   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
0001cc   f006
                                           ;	.line	193; usart.c	return source_fifo->data[source_tail];
0001ce   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0001d0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0001d2   500e     movf    0x0e, 0x0, 0x0   	MOVF	r0x0e, W
0001d4   2609     addwf   0x09, 0x1, 0x0   	ADDWF	r0x09, F
0001d6   500f     movf    0x0f, 0x0, 0x0   	MOVF	r0x0f, W
0001d8   2200     addwfc  0x00, 0x1, 0x0   	ADDWFC	r0x00, F
0001da   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
0001dc   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0001de   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
0001e0   ffe9
0001e2   c000     movff   0x000, 0xff3     	MOVFF	r0x00, PRODL
0001e4   fff3
0001e6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0001e8   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0001ea   f006
0001ec   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
0001ee   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
                                           _00267_DS_:
0001f0   cfe4     movff   0xfe4, 0x019     	MOVFF	PREINC1, r0x19
0001f2   f019
0001f4   cfe4     movff   0xfe4, 0x018     	MOVFF	PREINC1, r0x18
0001f6   f018
0001f8   cfe4     movff   0xfe4, 0x017     	MOVFF	PREINC1, r0x17
0001fa   f017
0001fc   cfe4     movff   0xfe4, 0x016     	MOVFF	PREINC1, r0x16
0001fe   f016
000200   cfe4     movff   0xfe4, 0x015     	MOVFF	PREINC1, r0x15
000202   f015
000204   cfe4     movff   0xfe4, 0x014     	MOVFF	PREINC1, r0x14
000206   f014
000208   cfe4     movff   0xfe4, 0x013     	MOVFF	PREINC1, r0x13
00020a   f013
00020c   cfe4     movff   0xfe4, 0x012     	MOVFF	PREINC1, r0x12
00020e   f012
000210   cfe4     movff   0xfe4, 0x011     	MOVFF	PREINC1, r0x11
000212   f011
000214   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
000216   f010
000218   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
00021a   f00f
00021c   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
00021e   f00e
000220   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
000222   f00d
000224   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
000226   f00c
000228   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
00022a   f00b
00022c   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
00022e   f00a
000230   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
000232   f009
000234   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
000236   f008
000238   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00023a   f007
00023c   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00023e   f006
000240   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
000242   f005
000244   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
000246   f004
000248   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00024a   f003
00024c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00024e   f002
000250   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000252   f001
000254   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000256   f000
000258   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00025a   ffd9
00025c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__puts_rom_fifo	code
                                           _puts_rom_fifo:
                                           ;	.line	156; usart.c	char puts_rom_fifo(const char * s, struct serial_buffer * fifo) {
0003f6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0003f8   ffe5
0003fa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0003fc   ffd9
0003fe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000400   ffe5
000402   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000404   ffe5
000406   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000408   ffe5
00040a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00040c   ffe5
00040e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000410   ffe5
000412   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000414   ffe5
000416   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000418   ffe5
00041a   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00041c   ffe5
00041e   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
000420   ffe5
000422   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
000424   ffe5
000426   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
000428   ffe5
00042a   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
00042c   ffe5
00042e   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
000430   ffe5
000432   c00d     movff   0x00d, 0xfe5     	MOVFF	r0x0d, POSTDEC1
000434   ffe5
000436   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
000438   ffe5
00043a   c00f     movff   0x00f, 0xfe5     	MOVFF	r0x0f, POSTDEC1
00043c   ffe5
00043e   c010     movff   0x010, 0xfe5     	MOVFF	r0x10, POSTDEC1
000440   ffe5
000442   0e02     movlw   0x02             	MOVLW	0x02
000444   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000446   f000
000448   0e03     movlw   0x03             	MOVLW	0x03
00044a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00044c   f001
00044e   0e04     movlw   0x04             	MOVLW	0x04
000450   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
000452   f002
000454   0e05     movlw   0x05             	MOVLW	0x05
000456   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
000458   f003
00045a   0e06     movlw   0x06             	MOVLW	0x06
00045c   cfdb     movff   0xfdb, 0x004     	MOVFF	PLUSW2, r0x04
00045e   f004
000460   0e07     movlw   0x07             	MOVLW	0x07
000462   cfdb     movff   0xfdb, 0x005     	MOVFF	PLUSW2, r0x05
000464   f005
                                           ;	.line	157; usart.c	unsigned char head=fifo->head;
000466   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
000468   ffe9
00046a   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00046c   fff3
00046e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000470   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
000472   f006
000474   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
                                           ;	.line	159; usart.c	while ( ( c = *s++ ) ) {
000476   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000478   0f01     addlw   0x01             	ADDLW	0x01
00047a   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
00047c   0e00     movlw   0x00             	MOVLW	0x00
00047e   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
000480   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
000482   0e00     movlw   0x00             	MOVLW	0x00
000484   2005     addwfc  0x05, 0x0, 0x0   	ADDWFC	r0x05, W
000486   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
000488   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00048a   0f02     addlw   0x02             	ADDLW	0x02
00048c   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
00048e   0e00     movlw   0x00             	MOVLW	0x00
000490   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
000492   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
000494   0e00     movlw   0x00             	MOVLW	0x00
000496   2005     addwfc  0x05, 0x0, 0x0   	ADDWFC	r0x05, W
000498   6e0c     movwf   0x0c, 0x0        	MOVWF	r0x0c
                                           _00238_DS_:
00049a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00049c   ffe9
00049e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0004a0   fff3
0004a2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0004a4   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0004a6   f006
0004a8   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
0004aa   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0004ac   e302     bnc     0x0004b2         	BNC	_00252_DS_
0004ae   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
0004b0   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
                                           _00252_DS_:
0004b2   c00d     movff   0x00d, 0x00e     	MOVFF	r0x0d, r0x0e
0004b4   f00e
0004b6   500d     movf    0x0d, 0x0, 0x0   	MOVF	r0x0d, W
0004b8   e023     bz      0x000500         	BZ	_00240_DS_
                                           ;	.line	160; usart.c	head++;
0004ba   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           ;	.line	161; usart.c	head &= SERIAL_BUFFER_SIZE_MASK;	/* wrap around if neededd */
0004bc   0e3f     movlw   0x3f             	MOVLW	0x3f
0004be   1606     andwf   0x06, 0x1, 0x0   	ANDWF	r0x06, F
                                           ;	.line	162; usart.c	if (head != fifo->tail) {		/* space left ? */ 
0004c0   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
0004c2   ffe9
0004c4   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
0004c6   fff3
0004c8   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0004ca   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0004cc   f006
0004ce   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
0004d0   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0004d2   180d     xorwf   0x0d, 0x0, 0x0   	XORWF	r0x0d, W
0004d4   e013     bz      0x0004fc         	BZ	_00236_DS_
                                           ;	.line	163; usart.c	fifo->data[head]=c;
0004d6   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0004d8   240a     addwf   0x0a, 0x0, 0x0   	ADDWF	r0x0a, W
0004da   6e0d     movwf   0x0d, 0x0        	MOVWF	r0x0d
0004dc   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0004de   200b     addwfc  0x0b, 0x0, 0x0   	ADDWFC	r0x0b, W
0004e0   6e0f     movwf   0x0f, 0x0        	MOVWF	r0x0f
0004e2   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0004e4   200c     addwfc  0x0c, 0x0, 0x0   	ADDWFC	r0x0c, W
0004e6   6e10     movwf   0x10, 0x0        	MOVWF	r0x10
0004e8   c00e     movff   0x00e, 0xfe5     	MOVFF	r0x0e, POSTDEC1
0004ea   ffe5
0004ec   c00d     movff   0x00d, 0xfe9     	MOVFF	r0x0d, FSR0L
0004ee   ffe9
0004f0   c00f     movff   0x00f, 0xff3     	MOVFF	r0x0f, PRODL
0004f2   fff3
0004f4   5010     movf    0x10, 0x0, 0x0   	MOVF	r0x10, W
0004f6   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
0004f8   f006
0004fa   d7cf     bra     0x00049a         	BRA	_00238_DS_
                                           _00236_DS_:
                                           ;	.line	165; usart.c	return -1;
0004fc   68e8     setf    0xe8, 0x0        	SETF	WREG
0004fe   d00a     bra     0x000514         	BRA	_00241_DS_
                                           _00240_DS_:
                                           ;	.line	168; usart.c	fifo->head=head;				/* only store new pointer if all is OK */
000500   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000502   ffe5
000504   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
000506   ffe9
000508   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00050a   fff3
00050c   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
00050e   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
000510   f006
                                           ;	.line	169; usart.c	return 1;
000512   0e01     movlw   0x01             	MOVLW	0x01
                                           _00241_DS_:
000514   cfe4     movff   0xfe4, 0x010     	MOVFF	PREINC1, r0x10
000516   f010
000518   cfe4     movff   0xfe4, 0x00f     	MOVFF	PREINC1, r0x0f
00051a   f00f
00051c   cfe4     movff   0xfe4, 0x00e     	MOVFF	PREINC1, r0x0e
00051e   f00e
000520   cfe4     movff   0xfe4, 0x00d     	MOVFF	PREINC1, r0x0d
000522   f00d
000524   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
000526   f00c
000528   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
00052a   f00b
00052c   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
00052e   f00a
000530   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
000532   f009
000534   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
000536   f008
000538   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00053a   f007
00053c   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00053e   f006
000540   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
000542   f005
000544   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
000546   f004
000548   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00054a   f003
00054c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00054e   f002
000550   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000552   f001
000554   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000556   f000
000558   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00055a   ffd9
00055c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__fifo_putchar	code
                                           _fifo_putchar:
                                           ;	.line	141; usart.c	char fifo_putchar(struct serial_buffer * fifo) {
000796   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000798   ffe5
00079a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00079c   ffd9
00079e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0007a0   ffe5
0007a2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0007a4   ffe5
0007a6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0007a8   ffe5
0007aa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0007ac   ffe5
0007ae   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0007b0   ffe5
0007b2   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0007b4   ffe5
0007b6   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0007b8   ffe5
0007ba   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0007bc   ffe5
0007be   0e02     movlw   0x02             	MOVLW	0x02
0007c0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0007c2   f000
0007c4   0e03     movlw   0x03             	MOVLW	0x03
0007c6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0007c8   f001
0007ca   0e04     movlw   0x04             	MOVLW	0x04
0007cc   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0007ce   f002
                                           ;	.line	143; usart.c	tail=fifo->tail;
0007d0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0007d2   0f01     addlw   0x01             	ADDLW	0x01
0007d4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0007d6   0e00     movlw   0x00             	MOVLW	0x00
0007d8   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0007da   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0007dc   0e00     movlw   0x00             	MOVLW	0x00
0007de   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0007e0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0007e2   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
0007e4   ffe9
0007e6   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
0007e8   fff3
0007ea   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0007ec   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0007ee   f006
0007f0   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
                                           ;	.line	144; usart.c	if (fifo->head != tail) {
0007f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0007f4   ffe9
0007f6   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0007f8   fff3
0007fa   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0007fc   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0007fe   f006
000800   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
000802   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000804   1806     xorwf   0x06, 0x0, 0x0   	XORWF	r0x06, W
000806   e029     bz      0x00085a         	BZ	_00220_DS_
                                           ;	.line	145; usart.c	tail++;
000808   2a06     incf    0x06, 0x1, 0x0   	INCF	r0x06, F
                                           ;	.line	146; usart.c	tail &= SERIAL_BUFFER_SIZE_MASK;	/* wrap around if neededd */
00080a   0e3f     movlw   0x3f             	MOVLW	0x3f
00080c   1606     andwf   0x06, 0x1, 0x0   	ANDWF	r0x06, F
                                           ;	.line	147; usart.c	if (putchar(fifo->data[tail])) {
00080e   0e02     movlw   0x02             	MOVLW	0x02
000810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000812   0e00     movlw   0x00             	MOVLW	0x00
000814   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000816   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000818   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00081a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00081c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00081e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000820   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
000822   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000824   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000826   ffe9
000828   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00082a   fff3
00082c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00082e   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
000830   f006
000832   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000834   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000836   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000838   ecff     call    0x000bfe, 0x0call    0x000bfe, 0x0 	CALL	_putchar
00083a   f005
00083c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00083e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
000840   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000842   e00b     bz      0x00085a         	BZ	_00220_DS_
                                           ;	.line	148; usart.c	fifo->tail=tail;
000844   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000846   ffe5
000848   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
00084a   ffe9
00084c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00084e   fff3
000850   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000852   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
000854   f006
                                           ;	.line	149; usart.c	return 1;
000856   0e01     movlw   0x01             	MOVLW	0x01
000858   d001     bra     0x00085c         	BRA	_00221_DS_
                                           _00220_DS_:
                                           ;	.line	152; usart.c	return 0;
00085a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00221_DS_:
00085c   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
00085e   f007
000860   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
000862   f006
000864   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
000866   f005
000868   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00086a   f004
00086c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00086e   f003
000870   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
000872   f002
000874   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000876   f001
000878   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00087a   f000
00087c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00087e   ffd9
000880   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__fifo_getchar	code
                                           _fifo_getchar:
                                           ;	.line	122; usart.c	char fifo_getchar(struct serial_buffer * fifo) {
0006a8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0006aa   ffe5
0006ac   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0006ae   ffd9
0006b0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0006b2   ffe5
0006b4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0006b6   ffe5
0006b8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0006ba   ffe5
0006bc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0006be   ffe5
0006c0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0006c2   ffe5
0006c4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0006c6   ffe5
0006c8   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0006ca   ffe5
0006cc   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0006ce   ffe5
0006d0   0e02     movlw   0x02             	MOVLW	0x02
0006d2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0006d4   f000
0006d6   0e03     movlw   0x03             	MOVLW	0x03
0006d8   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0006da   f001
0006dc   0e04     movlw   0x04             	MOVLW	0x04
0006de   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0006e0   f002
                                           ;	.line	126; usart.c	if (PIR1bits.RCIF) {
0006e2   aa9e     btfss   0x9e, 0x5, 0x0   	BTFSS	_PIR1bits, 5
0006e4   d044     bra     0x00076e         	BRA	_00201_DS_
                                           ;	.line	127; usart.c	head=fifo->head;
0006e6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0006e8   ffe9
0006ea   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0006ec   fff3
0006ee   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0006f0   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0006f2   f006
0006f4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           ;	.line	128; usart.c	head++;
0006f6   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           ;	.line	129; usart.c	head &= SERIAL_BUFFER_SIZE_MASK;	/* wrap around if neededd */
0006f8   0e3f     movlw   0x3f             	MOVLW	0x3f
0006fa   1603     andwf   0x03, 0x1, 0x0   	ANDWF	r0x03, F
                                           ;	.line	130; usart.c	if (head != fifo->tail) {
0006fc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0006fe   0f01     addlw   0x01             	ADDLW	0x01
000700   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000702   0e00     movlw   0x00             	MOVLW	0x00
000704   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
000706   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
000708   0e00     movlw   0x00             	MOVLW	0x00
00070a   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
00070c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00070e   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
000710   ffe9
000712   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
000714   fff3
000716   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
000718   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
00071a   f006
00071c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00071e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000720   1804     xorwf   0x04, 0x0, 0x0   	XORWF	r0x04, W
000722   e025     bz      0x00076e         	BZ	_00201_DS_
                                           ;	.line	131; usart.c	c=RCREG1;
000724   cfae     movff   0xfae, 0x004     	MOVFF	_RCREG1, r0x04
000726   f004
                                           ;	.line	132; usart.c	fifo->data[head]=c;
000728   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00072a   0f02     addlw   0x02             	ADDLW	0x02
00072c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00072e   0e00     movlw   0x00             	MOVLW	0x00
000730   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
000732   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000734   0e00     movlw   0x00             	MOVLW	0x00
000736   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
000738   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
00073a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00073c   2605     addwf   0x05, 0x1, 0x0   	ADDWF	r0x05, F
00073e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
000740   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000742   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
000744   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
000746   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000748   ffe5
00074a   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
00074c   ffe9
00074e   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
000750   fff3
000752   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
000754   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
000756   f006
                                           ;	.line	133; usart.c	fifo->head=head;
000758   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00075a   ffe5
00075c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00075e   ffe9
000760   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
000762   fff3
000764   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000766   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
000768   f006
                                           ;	.line	134; usart.c	return c;
00076a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00076c   d001     bra     0x000770         	BRA	_00202_DS_
                                           _00201_DS_:
                                           ;	.line	137; usart.c	return 0;
00076e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00202_DS_:
000770   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
000772   f007
000774   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
000776   f006
000778   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00077a   f005
00077c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00077e   f004
000780   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
000782   f003
000784   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
000786   f002
000788   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00078a   f001
00078c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00078e   f000
000790   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000792   ffd9
000794   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__putchar_fifo	code
                                           _putchar_fifo:
                                           ;	.line	107; usart.c	char putchar_fifo(char c, struct serial_buffer * fifo) {
000882   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000884   ffe5
000886   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000888   ffd9
00088a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00088c   ffe5
00088e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000890   ffe5
000892   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000894   ffe5
000896   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000898   ffe5
00089a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00089c   ffe5
00089e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0008a0   ffe5
0008a2   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
0008a4   ffe5
0008a6   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
0008a8   ffe5
0008aa   0e02     movlw   0x02             	MOVLW	0x02
0008ac   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0008ae   f000
0008b0   0e03     movlw   0x03             	MOVLW	0x03
0008b2   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0008b4   f001
0008b6   0e04     movlw   0x04             	MOVLW	0x04
0008b8   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0008ba   f002
0008bc   0e05     movlw   0x05             	MOVLW	0x05
0008be   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0008c0   f003
                                           ;	.line	109; usart.c	head=fifo->head;
0008c2   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0008c4   ffe9
0008c6   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
0008c8   fff3
0008ca   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0008cc   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0008ce   f006
0008d0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ;	.line	110; usart.c	head++;
0008d2   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
                                           ;	.line	111; usart.c	head &= SERIAL_BUFFER_SIZE_MASK;		/* wrap around if needed */
0008d4   0e3f     movlw   0x3f             	MOVLW	0x3f
0008d6   1604     andwf   0x04, 0x1, 0x0   	ANDWF	r0x04, F
                                           ;	.line	112; usart.c	if (head != fifo->tail) {
0008d8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0008da   0f01     addlw   0x01             	ADDLW	0x01
0008dc   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0008de   0e00     movlw   0x00             	MOVLW	0x00
0008e0   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0008e2   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
0008e4   0e00     movlw   0x00             	MOVLW	0x00
0008e6   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
0008e8   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0008ea   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
0008ec   ffe9
0008ee   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
0008f0   fff3
0008f2   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0008f4   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0008f6   f006
0008f8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0008fa   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0008fc   1805     xorwf   0x05, 0x0, 0x0   	XORWF	r0x05, W
0008fe   e021     bz      0x000942         	BZ	_00185_DS_
                                           ;	.line	113; usart.c	fifo->head = head;
000900   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000902   ffe5
000904   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000906   ffe9
000908   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
00090a   fff3
00090c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00090e   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
000910   f006
                                           ;	.line	114; usart.c	fifo->data[head] = c;
000912   0e02     movlw   0x02             	MOVLW	0x02
000914   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
000916   0e00     movlw   0x00             	MOVLW	0x00
000918   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00091a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00091c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00091e   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000920   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000922   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
000924   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000926   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000928   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00092a   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00092c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00092e   ffe5
000930   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
000932   ffe9
000934   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
000936   fff3
000938   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00093a   ec7d     call    0x000cfa, 0x0call    0x000cfa, 0x0 	CALL	__gptrput1
00093c   f006
                                           ;	.line	115; usart.c	return 1;
00093e   0e01     movlw   0x01             	MOVLW	0x01
000940   d001     bra     0x000944         	BRA	_00186_DS_
                                           _00185_DS_:
                                           ;	.line	117; usart.c	return 0;
000942   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00186_DS_:
000944   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
000946   f007
000948   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00094a   f006
00094c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00094e   f005
000950   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
000952   f004
000954   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
000956   f003
000958   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00095a   f002
00095c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00095e   f001
000960   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000962   f000
000964   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000966   ffd9
000968   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__print_debug_fifo	code
                                           _print_debug_fifo:
                                           ;	.line	83; usart.c	void print_debug_fifo(struct serial_buffer * fifo) {
00025e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000260   ffe5
000262   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000264   ffd9
000266   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000268   ffe5
00026a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00026c   ffe5
00026e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000270   ffe5
000272   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000274   ffe5
000276   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000278   ffe5
00027a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00027c   ffe5
00027e   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000280   ffe5
000282   0e02     movlw   0x02             	MOVLW	0x02
000284   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000286   f000
000288   0e03     movlw   0x03             	MOVLW	0x03
00028a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00028c   f001
00028e   0e04     movlw   0x04             	MOVLW	0x04
000290   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
000292   f002
                                           ;	.line	85; usart.c	putchar_wait('\r');
000294   0e0d     movlw   0x0d             	MOVLW	0x0d
000296   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000298   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
00029a   f006
00029c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	86; usart.c	putchar_wait('\n');
00029e   0e0a     movlw   0x0a             	MOVLW	0x0a
0002a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002a2   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
0002a4   f006
0002a6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	87; usart.c	print_debug_value('S',SERIAL_BUFFER_SIZE);
0002a8   0e40     movlw   0x40             	MOVLW	0x40
0002aa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ac   0e53     movlw   0x53             	MOVLW	0x53
0002ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002b0   ecbe     call    0x000b7c, 0x0call    0x000b7c, 0x0 	CALL	_print_debug_value
0002b2   f005
0002b4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0002b6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	88; usart.c	putchar_wait(' ');
0002b8   0e20     movlw   0x20             	MOVLW	0x20
0002ba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002bc   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
0002be   f006
0002c0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	89; usart.c	print_debug_value('M',SERIAL_BUFFER_SIZE_MASK);
0002c2   0e3f     movlw   0x3f             	MOVLW	0x3f
0002c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002c6   0e4d     movlw   0x4d             	MOVLW	0x4d
0002c8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002ca   ecbe     call    0x000b7c, 0x0call    0x000b7c, 0x0 	CALL	_print_debug_value
0002cc   f005
0002ce   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0002d0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	90; usart.c	putchar_wait(' ');
0002d2   0e20     movlw   0x20             	MOVLW	0x20
0002d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002d6   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
0002d8   f006
0002da   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	91; usart.c	print_debug_value('H',fifo->head);
0002dc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0002de   ffe9
0002e0   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0002e2   fff3
0002e4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0002e6   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0002e8   f006
0002ea   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0002ec   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0002ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002f0   0e48     movlw   0x48             	MOVLW	0x48
0002f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0002f4   ecbe     call    0x000b7c, 0x0call    0x000b7c, 0x0 	CALL	_print_debug_value
0002f6   f005
0002f8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0002fa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	92; usart.c	putchar_wait(' ');
0002fc   0e20     movlw   0x20             	MOVLW	0x20
0002fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000300   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000302   f006
000304   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	93; usart.c	print_debug_value('T',fifo->tail);
000306   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000308   0f01     addlw   0x01             	ADDLW	0x01
00030a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00030c   0e00     movlw   0x00             	MOVLW	0x00
00030e   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
000310   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000312   0e00     movlw   0x00             	MOVLW	0x00
000314   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
000316   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
000318   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
00031a   ffe9
00031c   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00031e   fff3
000320   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000322   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
000324   f006
000326   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000328   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00032a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00032c   0e54     movlw   0x54             	MOVLW	0x54
00032e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000330   ecbe     call    0x000b7c, 0x0call    0x000b7c, 0x0 	CALL	_print_debug_value
000332   f005
000334   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
000336   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	94; usart.c	putchar_wait(' ');
000338   0e20     movlw   0x20             	MOVLW	0x20
00033a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00033c   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
00033e   f006
000340   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	95; usart.c	putchar_wait(' ');
000342   0e20     movlw   0x20             	MOVLW	0x20
000344   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000346   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000348   f006
00034a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	96; usart.c	putchar_wait(' ');
00034c   0e20     movlw   0x20             	MOVLW	0x20
00034e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000350   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000352   f006
000354   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	97; usart.c	puts_rom(sData);
000356   0e00     movlw   0x00             	MOVLW	UPPER(_sData)
000358   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00035a   0e0b     movlw   0x0b             	MOVLW	HIGH(_sData)
00035c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00035e   0ef6     movlw   0xf6             	MOVLW	LOW(_sData)
000360   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000362   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
000364   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000366   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
000368   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00036a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00036c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00036e   ec51     call    0x000aa2, 0x0call    0x000aa2, 0x0 	CALL	_puts_rom
000370   f005
000372   0e03     movlw   0x03             	MOVLW	0x03
000374   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	98; usart.c	for (i=0; i<SERIAL_BUFFER_SIZE; i++) {
000376   0e02     movlw   0x02             	MOVLW	0x02
000378   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00037a   0e00     movlw   0x00             	MOVLW	0x00
00037c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00037e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000380   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00168_DS_:
                                           ;	.line	99; usart.c	print_hex_wait(fifo->data[i]);
000382   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000384   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
000386   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000388   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00038a   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00038c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00038e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
000390   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
000392   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
000394   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
000396   ffe9
000398   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
00039a   fff3
00039c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
00039e   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
0003a0   f006
0003a2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0003a4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0003a6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003a8   ec8b     call    0x000b16, 0x0call    0x000b16, 0x0 	CALL	_print_hex_wait
0003aa   f005
0003ac   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	100; usart.c	putchar_wait(' ');
0003ae   0e20     movlw   0x20             	MOVLW	0x20
0003b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003b2   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
0003b4   f006
0003b6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	98; usart.c	for (i=0; i<SERIAL_BUFFER_SIZE; i++) {
0003b8   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0003ba   0e40     movlw   0x40             	MOVLW	0x40
0003bc   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0003be   e3e1     bnc     0x000382         	BNC	_00168_DS_
                                           ;	.line	102; usart.c	putchar_wait('\r');
0003c0   0e0d     movlw   0x0d             	MOVLW	0x0d
0003c2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003c4   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
0003c6   f006
0003c8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	103; usart.c	putchar_wait('\n');
0003ca   0e0a     movlw   0x0a             	MOVLW	0x0a
0003cc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0003ce   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
0003d0   f006
0003d2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0003d4   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0003d6   f006
0003d8   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0003da   f005
0003dc   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0003de   f004
0003e0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0003e2   f003
0003e4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0003e6   f002
0003e8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0003ea   f001
0003ec   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0003ee   f000
0003f0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0003f2   ffd9
0003f4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__print_debug_value	code
                                           _print_debug_value:
                                           ;	.line	77; usart.c	void print_debug_value(char c, unsigned char value) {
000b7c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000b7e   ffe5
000b80   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000b82   ffd9
000b84   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000b86   ffe5
000b88   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000b8a   ffe5
000b8c   0e02     movlw   0x02             	MOVLW	0x02
000b8e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000b90   f000
000b92   0e03     movlw   0x03             	MOVLW	0x03
000b94   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
000b96   f001
                                           ;	.line	78; usart.c	putchar_wait(c);
000b98   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000b9a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b9c   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000b9e   f006
000ba0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	79; usart.c	putchar_wait(':');
000ba2   0e3a     movlw   0x3a             	MOVLW	0x3a
000ba4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000ba6   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000ba8   f006
000baa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	80; usart.c	print_hex_wait(value);
000bac   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000bae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000bb0   ec8b     call    0x000b16, 0x0call    0x000b16, 0x0 	CALL	_print_hex_wait
000bb2   f005
000bb4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
000bb6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000bb8   f001
000bba   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000bbc   f000
000bbe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000bc0   ffd9
000bc2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__puts_rom	code
                                           _puts_rom:
                                           ;	.line	70; usart.c	void puts_rom(const char * s) {
000aa2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000aa4   ffe5
000aa6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000aa8   ffd9
000aaa   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000aac   ffe5
000aae   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000ab0   ffe5
000ab2   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000ab4   ffe5
000ab6   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000ab8   ffe5
000aba   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000abc   ffe5
000abe   0e02     movlw   0x02             	MOVLW	0x02
000ac0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000ac2   f000
000ac4   0e03     movlw   0x03             	MOVLW	0x03
000ac6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
000ac8   f001
000aca   0e04     movlw   0x04             	MOVLW	0x04
000acc   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
000ace   f002
                                           _00145_DS_:
                                           ;	.line	72; usart.c	while ( ( c = *s++ ) ) {
000ad0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ad2   ffe9
000ad4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
000ad6   fff3
000ad8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000ada   ec5e     call    0x000cbc, 0x0call    0x000cbc, 0x0 	CALL	__gptrget1
000adc   f006
000ade   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000ae0   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
000ae2   e302     bnc     0x000ae8         	BNC	_00157_DS_
000ae4   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
000ae6   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
                                           _00157_DS_:
000ae8   c003     movff   0x003, 0x004     	MOVFF	r0x03, r0x04
000aea   f004
000aec   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
000aee   e006     bz      0x000afc         	BZ	_00148_DS_
                                           ;	.line	73; usart.c	putchar_wait( c );
000af0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
000af2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000af4   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000af6   f006
000af8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
000afa   d7ea     bra     0x000ad0         	BRA	_00145_DS_
                                           _00148_DS_:
000afc   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
000afe   f004
000b00   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
000b02   f003
000b04   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
000b06   f002
000b08   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000b0a   f001
000b0c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000b0e   f000
000b10   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000b12   ffd9
000b14   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__print_hex_wait	code
                                           _print_hex_wait:
                                           ;	.line	59; usart.c	void print_hex_wait(unsigned char c) {
000b16   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000b18   ffe5
000b1a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000b1c   ffd9
000b1e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000b20   ffe5
000b22   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000b24   ffe5
000b26   0e02     movlw   0x02             	MOVLW	0x02
000b28   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000b2a   f000
                                           ;	.line	61; usart.c	nibble=((c & 0xf0) >> 4 ) + '0';
000b2c   0ef0     movlw   0xf0             	MOVLW	0xf0
000b2e   1400     andwf   0x00, 0x0, 0x0   	ANDWF	r0x00, W
000b30   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000b32   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
000b34   0b0f     andlw   0x0f             	ANDLW	0x0f
000b36   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000b38   0e30     movlw   0x30             	MOVLW	0x30
000b3a   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
                                           ;	.line	62; usart.c	if (nibble>=0x3a) nibble+=7;
000b3c   0e3a     movlw   0x3a             	MOVLW	0x3a
000b3e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
000b40   e302     bnc     0x000b46         	BNC	_00126_DS_
000b42   0e07     movlw   0x07             	MOVLW	0x07
000b44   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
                                           _00126_DS_:
                                           ;	.line	63; usart.c	putchar_wait(nibble);
000b46   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000b48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b4a   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000b4c   f006
000b4e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	65; usart.c	nibble=(c & 0x0f) + '0';
000b50   0e0f     movlw   0x0f             	MOVLW	0x0f
000b52   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000b54   0e30     movlw   0x30             	MOVLW	0x30
000b56   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
000b58   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ;	.line	66; usart.c	if (nibble>=0x3a) nibble+=7;
000b5a   0e3a     movlw   0x3a             	MOVLW	0x3a
000b5c   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
000b5e   e302     bnc     0x000b64         	BNC	_00128_DS_
000b60   0e07     movlw   0x07             	MOVLW	0x07
000b62   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
                                           _00128_DS_:
                                           ;	.line	67; usart.c	putchar_wait(nibble);
000b64   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000b66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000b68   ec29     call    0x000c52, 0x0call    0x000c52, 0x0 	CALL	_putchar_wait
000b6a   f006
000b6c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
000b6e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000b70   f001
000b72   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000b74   f000
000b76   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000b78   ffd9
000b7a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__putchar_wait	code
                                           _putchar_wait:
                                           ;	.line	54; usart.c	void putchar_wait(unsigned char c) {
000c52   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000c54   ffe5
000c56   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000c58   ffd9
000c5a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c5c   ffe5
000c5e   0e02     movlw   0x02             	MOVLW	0x02
000c60   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000c62   f000
                                           _00117_DS_:
                                           ;	.line	55; usart.c	while (!TXSTA1bits.TRMT1);
000c64   a2ac     btfss   0xac, 0x1, 0x0   	BTFSS	_TXSTA1bits, 1
000c66   d7fe     bra     0x000c64         	BRA	_00117_DS_
                                           ;	.line	56; usart.c	TXREG1 = c;
000c68   c000     movff   0x000, 0xfad     	MOVFF	r0x00, _TXREG1
000c6a   ffad
000c6c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000c6e   f000
000c70   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000c72   ffd9
000c74   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__putchar	code
                                           _putchar:
                                           ;	.line	45; usart.c	char putchar(unsigned char c) {
000bfe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000c00   ffe5
000c02   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000c04   ffd9
000c06   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c08   ffe5
000c0a   0e02     movlw   0x02             	MOVLW	0x02
000c0c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
000c0e   f000
                                           ;	.line	46; usart.c	if ( TXSTA1bits.TRMT1 ) {
000c10   a2ac     btfss   0xac, 0x1, 0x0   	BTFSS	_TXSTA1bits, 1
000c12   d004     bra     0x000c1c         	BRA	_00111_DS_
                                           ;	.line	47; usart.c	TXREG1 = c;
000c14   c000     movff   0x000, 0xfad     	MOVFF	r0x00, _TXREG1
000c16   ffad
                                           ;	.line	48; usart.c	return 1;
000c18   0e01     movlw   0x01             	MOVLW	0x01
000c1a   d001     bra     0x000c1e         	BRA	_00112_DS_
                                           _00111_DS_:
                                           ;	.line	50; usart.c	return 0;
000c1c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00112_DS_:
000c1e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000c20   f000
000c22   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000c24   ffd9
000c26   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usart__init_usart	code
                                           _init_usart:
                                           ;	.line	14; usart.c	void init_usart (void) {
000c28   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
000c2a   ffe5
000c2c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
000c2e   ffd9
                                           ;	.line	16; usart.c	TRISCbits.TRISC6 = 0;	// make the TX pin a digital output
000c30   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	17; usart.c	TRISCbits.TRISC7 = 1;	// make the RX pin a digital input
000c32   8e94     bsf     0x94, 0x7, 0x0   	BSF	_TRISCbits, 7
                                           ;	.line	18; usart.c	TXSTA1bits.BRGH = USE_BRGH;		// high speed
000c34   84ac     bsf     0xac, 0x2, 0x0   	BSF	_TXSTA1bits, 2
                                           ;	.line	19; usart.c	BAUDCON1bits.BRG16 = USE_BRG16; 	// 8-bit baud rate generator
000c36   96a7     bcf     0xa7, 0x3, 0x0   	BCF	_BAUDCON1bits, 3
                                           ;	.line	20; usart.c	SPBRG = SBRG_VAL;		// calculated by defines
000c38   0e07     movlw   0x07             	MOVLW	0x07
000c3a   6eaf     movwf   0xaf, 0x0        	MOVWF	_SPBRG
                                           ;	.line	22; usart.c	PIE1bits.RC1IE = 0;		// disbale RX interrupt
000c3c   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
                                           ;	.line	23; usart.c	PIE1bits.TX1IE = 0;		// disbale TX interrupt
000c3e   989d     bcf     0x9d, 0x4, 0x0   	BCF	_PIE1bits, 4
                                           ;	.line	25; usart.c	RCSTA1bits.RX9  = 0;	// 8-bit reception
000c40   9cab     bcf     0xab, 0x6, 0x0   	BCF	_RCSTA1bits, 6
                                           ;	.line	26; usart.c	RCSTA1bits.SPEN = 1;	// enable serial port (configures RX/DT and TX/CK pins as serial port pins)
000c42   8eab     bsf     0xab, 0x7, 0x0   	BSF	_RCSTA1bits, 7
                                           ;	.line	27; usart.c	RCSTA1bits.CREN = 1;	// enable receiver
000c44   88ab     bsf     0xab, 0x4, 0x0   	BSF	_RCSTA1bits, 4
                                           ;	.line	29; usart.c	TXSTA1bits.TX9  = 0;	// 8-bit transmission
000c46   9cac     bcf     0xac, 0x6, 0x0   	BCF	_TXSTA1bits, 6
                                           ;	.line	30; usart.c	TXSTA1bits.SYNC = 0;	// asynchronous mode
000c48   98ac     bcf     0xac, 0x4, 0x0   	BCF	_TXSTA1bits, 4
                                           ;	.line	31; usart.c	TXSTA1bits.TXEN = 1;	// transmit enabled
000c4a   8aac     bsf     0xac, 0x5, 0x0   	BSF	_TXSTA1bits, 5
000c4c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
000c4e   ffd9
000c50   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _sData:
000bf6   4420     rlncf   0x20, 0x0, 0x0   	DB	0x20, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x20, 0x00
000bf8   7461     btg     0x61, 0x2, 0x0   
000bfa   3a61     swapf   0x61, 0x1, 0x0   
000bfc   0020     dw      0x0020           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 2482 (0x09b2) bytes ( 1.89%)
                                           ;           	 1241 (0x04d9) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	   26 (0x001a) bytes
                                           
                                           
                                           	end
